<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Ben Chuanlong Du's Blog - Ben Du</title><link>https://misc.legendu.net/</link><description>It is never too late to learn.</description><lastBuildDate>Thu, 05 Jun 2025 08:41:03 -0700</lastBuildDate><item><title>String in Rust</title><link>https://misc.legendu.net/blog/rust-str/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 20 Apr 2020 08:57:29 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-20:/blog/rust-str/</guid><category>Computer Science</category><category>programming</category><category>Rust</category><category>string</category><category>str</category><category>character</category><category>bytes</category></item><item><title>Python Tips and Traps</title><link>https://misc.legendu.net/blog/python-tips-and-traps/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-on-Python-Module"&gt;&lt;a href="http://www.legendu.net/2019/blog/python-module-tips"&gt;Tips on Python Module&lt;/a&gt;&lt;a class="anchor-link" href="#Tips-on-Python-Module"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;h2 id="Exception-and-Error-Handling-in-Python"&gt;&lt;a href="http://www.legendu.net/2020/blog/exception-and-error-handling-in-python"&gt;Exception and Error Handling in Python&lt;/a&gt;&lt;a class="anchor-link" href="#Exception-and-Error-Handling-in-Python"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Misc"&gt;Misc&lt;a class="anchor-link" href="#Misc"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://docs.python-guide.org/writing/gotchas/"&gt;https://docs.python-guide.org/writing/gotchas/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/101268/hidden-features-of-python"&gt;https://stackoverflow.com/questions/101268/hidden-features-of-python&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The &lt;code&gt;int&lt;/code&gt; type in Python 3 is unbounded,
 which means that there is no limit on the range of integer numbers that an &lt;code&gt;int&lt;/code&gt; can represent. 
 However, 
 there are still various integer related limits in Python 3 due to the interpreter's word size (&lt;code&gt;sys.maxsize&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 15 Nov 2020 10:10:12 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-11-15:/blog/python-tips-and-traps/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>tips</category><category>traps</category></item><item><title>Hands on the Python Library pdfplumber</title><link>https://misc.legendu.net/blog/hands-on-the-python-library-pdfplumber/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://github.com/Stirling-Tools/Stirling-PDF"&gt;Stirling-PDF&lt;/a&gt; 
is is a robust, locally hosted web-based PDF manipulation tool using Docker.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 15 Jul 2021 15:15:52 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-07-15:/blog/hands-on-the-python-library-pdfplumber/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Python</category><category>PDF</category><category>pdfplumber</category><category>image</category><category>table</category></item><item><title>Tips on asyncio in Python</title><link>https://misc.legendu.net/blog/tips-on-asyncio-in-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;tornado: async web frame&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/dabeaz/curio"&gt;https://github.com/dabeaz/curio&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/python-trio/trio"&gt;https://github.com/python-trio/trio&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="async-http-client"&gt;async http client&lt;a class="anchor-link" href="#async-http-client"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/aio-libs/aiohttp"&gt;https://github.com/aio-libs/aiohttp&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="References"&gt;References&lt;a class="anchor-link" href="#References"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Xbl7XjFYsN4"&gt;https://www.youtube.com/watch?v=Xbl7XjFYsN4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;HTTPX vs Requests vs AIOHTTP&lt;/p&gt;
&lt;p&gt;&lt;a href="https://oxylabs.io/blog/httpx-vs-requests-vs-aiohttp"&gt;https://oxylabs.io/blog/httpx-vs-requests-vs-aiohttp&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 17 Oct 2020 12:28:53 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-10-17:/blog/tips-on-asyncio-in-python/</guid><category>Computer Science</category><category>Computer Science</category><category>async</category><category>asyncio</category><category>Python</category></item><item><title>Hands on the psutil Module in Python</title><link>https://misc.legendu.net/blog/hands-on-psutil-python/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 24 Oct 2020 12:21:40 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-10-24:/blog/hands-on-psutil-python/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>psutil</category><category>process</category><category>Computer Science</category><category>CPU</category><category>memory</category><category>resource</category></item><item><title>Best Way of Using HoloViews</title><link>https://misc.legendu.net/blog/python-holoviews-best/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;DataFrame.hvplot&lt;/code&gt; (via the Python package &lt;code&gt;hvplot&lt;/code&gt;) is the most convenient way to use HoloViews.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you want to use HoloViews directly,
 it is better to create a HoloViews.Dataset object and use it for visualization.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;groupby&lt;/code&gt; option generates a plot 
 with a dropdown list for interactively showing plots of different groups.
 You can overlay plots of different groups together on the same plot 
 simplify by calling the &lt;code&gt;.overlay()&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 26 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-26:/blog/python-holoviews-best/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>visualization</category><category>HoloViews</category><category>test</category><category>interactive tools</category></item><item><title>Rust for Frontend Development</title><link>https://misc.legendu.net/blog/rust-for-frontend-development/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Leptos"&gt;&lt;a href="https://github.com/leptos-rs/leptos"&gt;Leptos&lt;/a&gt;&lt;a class="anchor-link" href="#Leptos"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/leptos-rs/leptos"&gt;Leptos&lt;/a&gt;
is a full-stack, isomorphic Rust web framework leveraging fine-grained reactivity to build declarative user interfaces.&lt;/p&gt;
&lt;h2 id="Dioxus"&gt;&lt;a href="https://github.com/DioxusLabs/dioxus"&gt;Dioxus&lt;/a&gt;&lt;a class="anchor-link" href="#Dioxus"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/DioxusLabs/dioxus"&gt;Dioxus&lt;/a&gt;
is a portable, performant, and ergonomic framework for building cross-platform user interfaces in Rust.&lt;/p&gt;
&lt;h2 id="Sycamore"&gt;&lt;a href="https://github.com/sycamore-rs/sycamore"&gt;Sycamore&lt;/a&gt;&lt;a class="anchor-link" href="#Sycamore"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/sycamore-rs/sycamore"&gt;Sycamore&lt;/a&gt;
is a reactive library for creating web apps in Rust and WebAssembly.&lt;/p&gt;
&lt;h2 id="yewstack/yew"&gt;&lt;a href="https://github.com/yewstack/yew"&gt;yewstack/yew&lt;/a&gt;&lt;a class="anchor-link" href="#yewstack/yew"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;h2 id="seed"&gt;&lt;a href="https://github.com/seed-rs/seed"&gt;seed&lt;/a&gt;&lt;a class="anchor-link" href="#seed"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Seed is a front-end Rust framework for creating fast and reliable web apps with an elm-like architecture.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 27 Jul 2020 22:39:08 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-07-27:/blog/rust-for-frontend-development/</guid><category>Computer Science</category><category>Computer Science</category><category>Rust</category><category>frontend</category><category>web</category><category>HTML</category></item><item><title>The Result Enum in Rust</title><link>https://misc.legendu.net/blog/the-result-enum-in-Rust/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 21 Apr 2021 17:09:54 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-04-21:/blog/the-result-enum-in-Rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Result</category><category>Ok</category><category>Err</category><category>Rust</category></item><item><title>Hands on the Python module shutil</title><link>https://misc.legendu.net/blog/hands-on-the-python-model-shutil/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3/library/shutil.html"&gt;https://docs.python.org/3/library/shutil.html&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 12 Nov 2020 22:28:23 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-11-12:/blog/hands-on-the-python-model-shutil/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>shutil</category><category>IO</category><category>file system</category></item><item><title>Pattern Matching in Rust</title><link>https://misc.legendu.net/blog/pattern-matching-in-rust/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 26 Apr 2021 08:55:40 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-04-26:/blog/pattern-matching-in-rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Rust</category><category>pattern</category><category>match</category><category>matching</category></item><item><title>SQL Style And Formatter</title><link>https://misc.legendu.net/blog/sql-style-and-formatter/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Command-line-Tools"&gt;Command-line Tools&lt;a class="anchor-link" href="#Command-line-Tools"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id="sleek"&gt;&lt;a href="https://github.com/nrempel/sleek"&gt;sleek&lt;/a&gt;&lt;a class="anchor-link" href="#sleek"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href="https://github.com/nrempel/sleek"&gt;Sleek&lt;/a&gt;
is a CLI tool for formatting SQL. 
It helps you maintain a consistent style across your SQL code, 
enhancing readability and productivity.&lt;/p&gt;
&lt;h3 id="sqlfluff"&gt;&lt;a href="http://www.legendu.net/misc/blog/tips-on-sqlfluff"&gt;sqlfluff&lt;/a&gt;&lt;a class="anchor-link" href="#sqlfluff"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The command &lt;code&gt;sqlfluff fix&lt;/code&gt; can be used to fix issues (including formatting issues) in SQL code. 
It can be used as a tool to format SQL code. 
However, 
&lt;code&gt;sqlfluff fix&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 13 Aug 2020 13:12:21 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-08-13:/blog/sql-style-and-formatter/</guid><category>Computer Science</category><category>Computer Science</category><category>SQL</category><category>programming</category><category>format</category><category>formatter</category><category>formatting</category><category>style</category><category>sqlfluff</category><category>sleek</category></item><item><title>Rust Crate Log</title><link>https://misc.legendu.net/blog/rust-crate-log/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 17 Jun 2021 23:28:15 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-06-17:/blog/rust-crate-log/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Rust</category><category>crate</category><category>log</category></item><item><title>Error Handling in Rust</title><link>https://misc.legendu.net/blog/error-handling-in-rust/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 29 May 2021 10:12:42 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-05-29:/blog/error-handling-in-rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>error</category><category>handling</category><category>exception</category><category>try</category><category>catch</category><category>panic</category></item><item><title>Implement a Singleton in Rust</title><link>https://misc.legendu.net/blog/implement-a-singleton-in-rust/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://doc.rust-lang.org/std/cell/struct.OnceCell.html"&gt;std::cell::OnceCell&lt;/a&gt;
 is a partial implementation of &lt;code&gt;once_cell&lt;/code&gt; in the Rust standard library.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There are 2 Rust crates
 &lt;a href="https://crates.io/crates/lazy_static"&gt;lazy_static&lt;/a&gt;
 and
 &lt;a href="https://crates.io/crates/once_cell"&gt;once_cell&lt;/a&gt;
 for (lazy) once assignment 
 (which can be used to create singletons).
 &lt;a href="https://crates.io/crates/once_cell"&gt;once_cell&lt;/a&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 21 Apr 2021 09:46:38 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-04-21:/blog/implement-a-singleton-in-rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Rust</category><category>singleton</category><category>once_cell</category><category>lazy_static</category><category>lazy</category><category>static</category><category>assignment</category></item><item><title>Define Variables in Rust</title><link>https://misc.legendu.net/blog/rust-define-variable/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 24 Apr 2020 07:36:11 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-24:/blog/rust-define-variable/</guid><category>Computer Science</category><category>programming</category><category>Rust</category><category>define</category><category>variable</category><category>let</category><category>mut</category><category>const</category><category>static</category></item><item><title>Bundle Resource Files into a Rust Application</title><link>https://misc.legendu.net/blog/bundle-resource-files-into-a-rust-application/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The Rust macro
 &lt;a href="https://doc.rust-lang.org/std/macro.include_str.html"&gt;include_str&lt;/a&gt;
 includes a UTF-8 encoded file as a string;
 the Rust macro
 &lt;a href="https://doc.rust-lang.org/std/macro.include_bytes.html"&gt;include_bytes&lt;/a&gt;
 includes a file as a reference to a byte array.
 Both of those 2 macros load files into the Rust binary at compile time 
 and consume memory at run time.
 It might not be a good idea to use them for large files!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 22 Apr 2021 15:49:02 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-04-22:/blog/bundle-resource-files-into-a-rust-application/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Rust</category><category>bundle</category><category>resource</category><category>file</category><category>include_str</category><category>include_bytes</category><category>cargo</category><category>deb</category><category>include_dir</category><category>rust-embed</category><category>embed</category></item><item><title>Use Python with Google Spreadsheet</title><link>https://misc.legendu.net/blog/use-python-with-google-spreadsheet/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h1 id="References"&gt;References&lt;a class="anchor-link" href="#References"&gt;&amp;#182;&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;a href="https://github.com/burnash/gspread"&gt;gspread&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developers.google.com/sheets/api/quickstart/python"&gt;Google Spreadsheet API v4 Python Quickstart&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://towardsdatascience.com/accessing-google-spreadsheet-data-using-python-90a5bc214fd2"&gt;Accessing Google Spreadsheet Data using Python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.twilio.com/blog/2017/02/an-easy-way-to-read-and-write-to-a-google-spreadsheet-in-python.html"&gt;Google Spreadsheet and Python&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 23 May 2020 22:34:54 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-05-23:/blog/use-python-with-google-spreadsheet/</guid><category>Computer Science</category><category>Computer Science</category><category>Google</category><category>spreadsheet</category><category>Python</category><category>API</category></item><item><title>Pointer, Reference and Ownership in Rust</title><link>https://misc.legendu.net/blog/pointer-reference-and-ownership-in-rust/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://cheats.rs/#references-pointers"&gt;References &amp;amp; Pointers&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You should avoid using lifetime annotation as much as possible 
 especially in public APIs. 
 Leveraging smart pointers is a good approach to 
 elide lifetime annotations.
 For more discussions on this,
 please refer to
 &lt;a href="https://kerkour.com/blog/rust-avoid-lifetimes/"&gt;Smart pointers: The secret to write clean Rust code&lt;/a&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 15 May 2021 11:18:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-05-15:/blog/pointer-reference-and-ownership-in-rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Rust</category><category>pointer</category><category>reference</category><category>ownership</category><category>mutability</category><category>shared</category><category>exclusive</category><category>borrow checker</category></item><item><title>Develop Macros in Rust</title><link>https://misc.legendu.net/blog/develop-macros-in-rust/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Useful-Crates-for-Macro-Development"&gt;Useful Crates for Macro Development&lt;a class="anchor-link" href="#Useful-Crates-for-Macro-Development"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id="syn"&gt;&lt;a href="https://crates.io/crates/syn"&gt;syn&lt;/a&gt;&lt;a class="anchor-link" href="#syn"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href="https://crates.io/crates/syn"&gt;Syn&lt;/a&gt;
is a parsing library 
for parsing a stream of Rust tokens into a syntax tree of Rust source code.&lt;/p&gt;
&lt;h3 id="quote"&gt;&lt;a href="https://crates.io/crates/quote"&gt;quote&lt;/a&gt;&lt;a class="anchor-link" href="#quote"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href="https://crates.io/crates/quote"&gt;Quote&lt;/a&gt;
provides the &lt;code&gt;quote!&lt;/code&gt; macro 
for turning Rust syntax tree data structures into tokens of source code.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 15 May 2021 09:43:53 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-05-15:/blog/develop-macros-in-rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Rust</category><category>macro</category><category>declaritive</category><category>procedural</category></item><item><title>Trait in Rust</title><link>https://misc.legendu.net/blog/trait-in-rust/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 19 Apr 2021 20:58:22 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-04-19:/blog/trait-in-rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Rust</category><category>Copy</category><category>Clone</category><category>trait</category><category>super</category><category>generic</category></item><item><title>Char in Rust</title><link>https://misc.legendu.net/blog/rust-char/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 08 Apr 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-08:/blog/rust-char/</guid><category>Computer Science</category><category>programming</category><category>Rust</category><category>char</category><category>character</category></item><item><title>Option vs Result in Rust</title><link>https://misc.legendu.net/blog/option-vs-result-in-rust/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Prefer &lt;code&gt;Option&amp;lt;&amp;amp;T&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;amp;Option&amp;lt;T&amp;gt;&lt;/code&gt; as data APIs.
 for more discussions,
 please refer to 
 &lt;a href="https://www.youtube.com/watch?v=6c7pZYP_iIE"&gt;Choose the Right Option&lt;/a&gt;
 .&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 22 Apr 2021 08:34:04 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-04-22:/blog/option-vs-result-in-rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category></item><item><title>Coalesce and Repartition in Spark DataFrame</title><link>https://misc.legendu.net/blog/spark-dataframe-coalesce-repartition/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="References"&gt;References&lt;a class="anchor-link" href="#References"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/42171499/get-current-number-of-partitions-of-a-dataframe"&gt;https://stackoverflow.com/questions/42171499/get-current-number-of-partitions-of-a-dataframe&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="coalesce-vs-repartition"&gt;coalesce vs repartition&lt;a class="anchor-link" href="#coalesce-vs-repartition"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://hackernoon.com/managing-spark-partitions-with-coalesce-and-repartition-4050c57ad5c4m"&gt;https://hackernoon.com/managing-spark-partitions-with-coalesce-and-repartition-4050c57ad5c4m&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 24 Jun 2020 13:25:39 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-24:/blog/spark-dataframe-coalesce-repartition/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>DataFrame</category><category>repartition</category><category>coalesce</category></item><item><title>Spark Configuration</title><link>https://misc.legendu.net/blog/spark-configuration/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 17 Jun 2020 22:48:25 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-17:/blog/spark-configuration/</guid><category>Computer Science</category><category>Computer Science</category><category>Spark</category><category>configuration</category><category>big data</category><category>config</category></item><item><title>IO in Rust</title><link>https://misc.legendu.net/blog/io-in-rust/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt; Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement! &lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 30 Nov 2020 00:15:05 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-11-30:/blog/io-in-rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Rust</category><category>IO</category><category>file</category><category>fs</category><category>read</category><category>write</category></item><item><title>Array in Rust</title><link>https://misc.legendu.net/blog/rust-collection-array/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 08 Apr 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-08:/blog/rust-collection-array/</guid><category>Computer Science</category><category>programming</category><category>Rust</category><category>collection</category><category>array</category><category>Vec</category><category>sequence</category></item><item><title>Vector in Rust</title><link>https://misc.legendu.net/blog/rust-vector/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 08 Apr 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-08:/blog/rust-vector/</guid><category>Computer Science</category><category>programming</category><category>Rust</category><category>collection</category><category>Vector</category><category>vec</category></item><item><title>Set in Rust</title><link>https://misc.legendu.net/blog/set-in-rust/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 22 May 2021 09:14:31 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-05-22:/blog/set-in-rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Rust</category><category>set</category><category>HashSet</category></item><item><title>Hash in Rust</title><link>https://misc.legendu.net/blog/hash-in-rust/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 19 Apr 2021 20:43:47 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-04-19:/blog/hash-in-rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Rust</category><category>hash</category><category>Hasher</category><category>Eq</category><category>equal</category></item><item><title>Enum in Rust</title><link>https://misc.legendu.net/blog/rust-enum/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 29 Apr 2020 10:59:15 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-29:/blog/rust-enum/</guid><category>Computer Science</category><category>programming</category><category>Rust</category><category>enum</category><category>enumeration</category></item><item><title>Profile Performance of Python Applications</title><link>https://misc.legendu.net/blog/python-profile/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips"&gt;Tips&lt;a class="anchor-link" href="#Tips"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;cProfile&lt;/code&gt; (implemented in C) is preferred over &lt;code&gt;profile&lt;/code&gt; (implemented in Python).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The profiler modules (&lt;code&gt;cProfile&lt;/code&gt; and &lt;code&gt;profile&lt;/code&gt;) and tools based on them 
 (e.g., &lt;code&gt;%prun&lt;/code&gt; and &lt;code&gt;%%prun&lt;/code&gt; for notebook)
 are designed to provide an execution profile for a given program, 
 not for benchmarking purposes 
 (for that, there is &lt;code&gt;time&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 07 Jan 2021 12:34:11 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-01-07:/blog/python-profile/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>profile</category><category>cProfile</category><category>importtime</category><category>tuna</category><category>SnakeViz</category><category>pyperf</category><category>performance</category><category>pyperformance</category></item><item><title>DataFrame Implementations in Python</title><link>https://misc.legendu.net/blog/scaling-pandas/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt; Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement! &lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id="Alternatives-to-pandas-for-Small-Data"&gt;Alternatives to pandas for Small Data&lt;a class="anchor-link" href="#Alternatives-to-pandas-for-Small-Data"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href="http://www.legendu.net/misc/blog/tips-on-polars"&gt;Polars&lt;/a&gt;
 is a blazingly fast DataFrames library 
 implemented in Rust using Apache Arrow as memory model.
 It is the best replacement of pandas for small data at this time.
 Notice that Polars support multithreading and lazy computation 
 but it cannot handle data larger than memory at this time.&lt;/li&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 26 Nov 2020 14:24:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-11-26:/blog/scaling-pandas/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Python</category><category>DataFrame</category><category>pandas</category><category>Polars</category><category>PySpark</category><category>Vaex</category><category>Modin</category><category>Dask</category><category>RAPIDS</category><category>cudf</category><category>cylon</category><category>big data</category></item><item><title>Function in Rust</title><link>https://misc.legendu.net/blog/rust-funs/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 04 Jul 2020 12:13:06 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-07-04:/blog/rust-funs/</guid><category>Computer Science</category><category>programming</category><category>Rust</category><category>function</category><category>overload</category><category>default</category><category>optional</category><category>argument</category></item><item><title>Path in Rust</title><link>https://misc.legendu.net/blog/Path-in-Rust/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 02 May 2021 00:38:18 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-05-02:/blog/Path-in-Rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Rust</category><category>path</category><category>normpath</category></item><item><title>String Functions in Spark</title><link>https://misc.legendu.net/blog/pyspark-func-string/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h1 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;You can use the &lt;code&gt;split&lt;/code&gt; function to split a delimited string into an array.
 It is suggested that removing trailing separators before you apply the &lt;code&gt;split&lt;/code&gt; function.
 Please refer to the split section before for more detailed discussions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Some string functions (e.g., &lt;code&gt;right&lt;/code&gt;, etc.) are available in the Spark SQL APIs
 but not available as Spark DataFrame APIs.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 05 Sep 2020 14:56:47 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-09-05:/blog/pyspark-func-string/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>DataFrame</category><category>string</category><category>round</category><category>Spark SQL</category><category>functions</category></item><item><title>The Case Statement and the when Function in Spark</title><link>https://misc.legendu.net/blog/pyspark-dataframe-case-when/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Watch out for NaNs ..., behave might not what you expect ...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;None can be used for otherwise and yield null in DataFrame.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Column alias and postional columns can be used in group by in Spark SQL!!!&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Notice the function &lt;code&gt;when&lt;/code&gt; behaves like &lt;code&gt;if-else&lt;/code&gt;.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 17 Jun 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-17:/blog/pyspark-dataframe-case-when/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>DataFrame</category><category>case</category><category>when</category><category>Spark SQL</category><category>functions</category></item><item><title>Arithmetic Functions and Operations in Spark</title><link>https://misc.legendu.net/blog/pyspark-func-arithmetic/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 05 Sep 2020 14:56:47 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-09-05:/blog/pyspark-func-arithmetic/</guid><category>Computer Science</category><category>programming</category><category>Spark</category><category>DataFrame</category><category>arithmetic</category><category>Spark SQL</category><category>functions</category><category>modulus</category></item><item><title>Collection Functions in Spark</title><link>https://misc.legendu.net/blog/pyspark-func-collection/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;If you use PySpark instead of Spark/Scala,
 pandas udf is a great alternative 
 to all those (complicated) collections functions discussed here.
 Leveraging pandas udf, 
 each partition of a Spark DataFrame can be converted to a pandas DataFrame 
 without copying the underlying data,
 you can then do transforms on pandas DataFrames
 which will be converted back to partitons of a Spark DataFrame.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 05 Sep 2020 14:56:47 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-09-05:/blog/pyspark-func-collection/</guid><category>Computer Science</category><category>programming</category><category>Spark</category><category>DataFrame</category><category>collection</category><category>complex data types</category><category>StructType</category><category>ArrayTypes</category><category>Spark SQL</category><category>functions</category><category>modulus</category><category>func</category><category>fun</category></item><item><title>Rounding Functions in Spark</title><link>https://misc.legendu.net/blog/pyspark-func-rounding/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 17 Jun 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-17:/blog/pyspark-func-rounding/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>DataFrame</category><category>rounding</category><category>round</category><category>Spark SQL</category><category>functions</category></item><item><title>Statistical Functions in Spark</title><link>https://misc.legendu.net/blog/spark-stat-functions/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://spark.apache.org/docs/latest/api/java/org/apache/spark/sql/DataFrameStatFunctions.html"&gt;https://spark.apache.org/docs/latest/api/java/org/apache/spark/sql/DataFrameStatFunctions.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spark.apache.org/docs/latest/api/java/org/apache/spark/sql/DataFrameStatFunctions.html#approxQuantile-java.lang.String:A-double:A-double-"&gt;https://spark.apache.org/docs/latest/api/java/org/apache/spark/sql/DataFrameStatFunctions.html#approxQuantile-java.lang.String:A-double:A-double-&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spark.apache.org/docs/latest/api/sql/index.html#approx_percentile"&gt;https://spark.apache.org/docs/latest/api/sql/index.html#approx_percentile&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 13 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-13:/blog/spark-stat-functions/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>DataFrame</category><category>statistical functions</category><category>quantile</category><category>approximate</category><category>approxQuantile</category><category>approx_quantile</category></item><item><title>Window Functions in Spark</title><link>https://misc.legendu.net/blog/window-functions-in-spark/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Window-with-orderBy"&gt;Window with orderBy&lt;a class="anchor-link" href="#Window-with-orderBy"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;It is tricky!!!&lt;/p&gt;
&lt;p&gt;If you provide ORDER BY clause then the default frame is RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/52273186/pyspark-spark-window-function-first-last-issue"&gt;https://stackoverflow.com/questions/52273186/pyspark-spark-window-function-first-last-issue&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Avoid using last and use first with &lt;code&gt;descending order by&lt;/code&gt; instead.
This gives less surprisings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do NOT use order by if not necessary. 
It introduces unnecessary ...&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 03 May 2020 23:52:16 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-05-03:/blog/window-functions-in-spark/</guid><category>Computer Science</category><category>Computer Science</category><category>Spark</category><category>window function</category><category>partition</category><category>over</category><category>analytics functions</category><category>big data</category></item><item><title>Python Profiler for JupyterLab Notebooks</title><link>https://misc.legendu.net/blog/python-profile-notebook/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="%time"&gt;%time&lt;a class="anchor-link" href="#%time"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Measue the execuation time of the code &lt;strong&gt;ONCE&lt;/strong&gt;.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="%timeit"&gt;%timeit&lt;a class="anchor-link" href="#%timeit"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Measure the execuation time of the code (accurately) by running it &lt;strong&gt;MULTIPLE TIMES&lt;/strong&gt; 
and taking the average.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="%prun-|-%%prun"&gt;&lt;a href="https://ipython.readthedocs.io/en/stable/interactive/magics.html#magic-prun"&gt;%prun | %%prun&lt;/a&gt;&lt;a class="anchor-link" href="#%prun-|-%%prun"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;-D&lt;/code&gt;: output the profiling results into a file 
so that you can other tools (e.g., snakeviz) to visualize it.&lt;/p&gt;
&lt;p&gt;Noticd that &lt;code&gt;%prun&lt;/code&gt; and &lt;code&gt;%%prun&lt;/code&gt; are based on &lt;code&gt;cProfile&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 24 Apr 2020 15:19:45 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-24:/blog/python-profile-notebook/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>profile</category><category>profiler</category><category>Jupyter</category><category>JupyterLab</category><category>notebook</category></item><item><title>Image Filters in OpenCV</title><link>https://misc.legendu.net/blog/image-filters-in-opencv/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 24 Apr 2020 22:30:50 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-24:/blog/image-filters-in-opencv/</guid><category>Computer Science</category><category>Computer Science</category><category>OpenCV</category><category>Python</category><category>image filter</category></item><item><title>Models in Torchvision and Ways to Finetune Them</title><link>https://misc.legendu.net/blog/models-in-torchvision-and-ways-to-finetune-them/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;code&gt;inception_v3&lt;/code&gt; requires an input of (299, 299)
while other models requires an input of (224, 224).
Due to adaptive pooling used in some models, 
they can run on varying sized intput without throwing errors
(but the results are usually not correct).
You have to resize/crop an image to be the right input size 
(and then other necessary transformations, e.g., &lt;code&gt;to_tensor&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 21 Apr 2020 13:26:15 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-21:/blog/models-in-torchvision-and-ways-to-finetune-them/</guid><category>Computer Science</category><category>Computer Science</category><category>data science</category><category>AI</category><category>machine learning</category><category>deep learning</category><category>PyTorch</category><category>models</category><category>torchvision</category><category>transfer learning</category></item><item><title>My Configuration Script for Docker Containers Based on dclong/jupyterhub-ds</title><link>https://misc.legendu.net/blog/my-configuration-script-for-docker-jupyterhub-ds/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 07 Aug 2020 23:02:33 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-08-07:/blog/my-configuration-script-for-docker-jupyterhub-ds/</guid><category>OS</category><category>Linux</category><category>Ubuntu</category><category>Docker</category><category>dclong/jupyterhub-ds</category></item><item><title>Numpy Arrays in Python</title><link>https://misc.legendu.net/blog/python-numpy/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The Pythonic way of checking whether a collection (string, list, set, dict, etc.) &lt;code&gt;coll&lt;/code&gt;
 is non-empty is to use &lt;code&gt;if coll&lt;/code&gt;. 
 However, 
 do NOT use &lt;code&gt;if arr&lt;/code&gt; to check whether a numpy array is non-empty or not. 
 Instead,
 you shoule use &lt;code&gt;arr.size &amp;gt;0&lt;/code&gt; to check whether a numpy array is non-empty or not.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 21 Nov 2020 22:10:08 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-11-21:/blog/python-numpy/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>numpy</category><category>array</category><category>stack</category></item><item><title>Load Images into Pillow</title><link>https://misc.legendu.net/blog/python-pillow-image-load/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 17 Mar 2020 00:06:02 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-03-17:/blog/python-pillow-image-load/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>Pillow</category><category>computer vision</category><category>CV</category><category>image</category><category>load</category><category>PIL</category><category>array</category><category>numpy</category><category>bytes</category><category>string</category><category>buffer</category></item><item><title>Hands on the Tracing Crate in Rust</title><link>https://misc.legendu.net/blog/hands-on-the-tracing-crate-in-rust/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 17 Jun 2021 22:56:19 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-06-17:/blog/hands-on-the-tracing-crate-in-rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Rust</category><category>tracing</category><category>crate</category></item><item><title>The println Macro in Rust</title><link>https://misc.legendu.net/blog/the-println-macro-in-rust/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 20 Apr 2021 08:55:30 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-04-20:/blog/the-println-macro-in-rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Rust</category><category>println</category><category>format</category><category>formatting</category><category>fmt</category></item><item><title>Primitive Types in Rust</title><link>https://misc.legendu.net/blog/rust-primitive-types/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 08 Apr 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-08:/blog/rust-primitive-types/</guid><category>Computer Science</category><category>programming</category><category>Rust</category><category>primitive types</category><category>int</category><category>integer</category><category>tuple</category></item><item><title>Get Index of True Values of a Sequence in Python</title><link>https://misc.legendu.net/blog/get-index-of-true-values-of-a-sequence-in-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Using-Boolean-Indexing"&gt;Using Boolean Indexing&lt;a class="anchor-link" href="#Using-Boolean-Indexing"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 30 Apr 2020 12:07:44 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-30:/blog/get-index-of-true-values-of-a-sequence-in-python/</guid><category>Computer Science</category><category>Computer Science</category><category>Python</category><category>index</category><category>sequence</category><category>filtering</category><category>Series</category><category>numpy</category><category>where</category></item><item><title>The Best Way to Find Files and Manipulate Them</title><link>https://misc.legendu.net/blog/the-best-way-to-find-files-and-manipulate-them/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt; Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement! &lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;There are many cool (command-line) tools 
which can help you quickly find/locate files.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://www.legendu.net/misc/blog/find-tips"&gt;find&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;locate &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.legendu.net/misc/blog/osquery-tips"&gt;osquery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.legendu.net/misc/blog/use-fselect-to-find-files"&gt;fselect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.legendu.net/misc/blog/ripgrep-is-a-better-alternative-to-find"&gt;ripgrep&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Those tools can be combined with the pipe operator &lt;code&gt;|&lt;/code&gt; to do further filtering or manipulation.
However,
after trying all tools I have to state that the best way for a Python user 
is leveraging the &lt;code&gt;pathlib&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 09 Apr 2021 00:39:07 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-04-09:/blog/the-best-way-to-find-files-and-manipulate-them/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Python</category><category>find</category><category>locate</category><category>fselect</category><category>osquery</category><category>pathlib</category></item><item><title>Sealed Trait in Rust</title><link>https://misc.legendu.net/blog/sealed-trait-in-rust/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 08 Jun 2021 16:39:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-06-08:/blog/sealed-trait-in-rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Rust</category><category>sealed</category><category>trait</category></item><item><title>Hands on Dulwich</title><link>https://misc.legendu.net/blog/hands-on-Dulwich/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Note: dulwich is not feature complete yet 
and the development of the project is extremely slow.
It is suggested that you use other Python packages instead.
For more discussions,
please refer to
&lt;a href="http://www.legendu.net/misc/blog/git-implementations-and-bindings-in-python/"&gt;Git Implementations and Bindings in Python&lt;/a&gt;
.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;The &lt;code&gt;git&lt;/code&gt; command (and thus Dulwich) accepts URLs both with and without the trailing &lt;code&gt;.git&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 29 Nov 2020 21:13:47 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-11-29:/blog/hands-on-Dulwich/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Python</category><category>Git</category><category>Dulwicch</category><category>version control</category></item><item><title>Hands on GitPython</title><link>https://misc.legendu.net/blog/hands-on-GitPython/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;GitPython is a wrapper around the &lt;code&gt;git&lt;/code&gt; command.
 It requires the &lt;code&gt;git&lt;/code&gt; command to be on the search path in order to work. 
 Also, 
 sometimes it is easier to call the &lt;code&gt;git&lt;/code&gt; command 
 via &lt;code&gt;subprocess.run&lt;/code&gt; directly instead of using GitPython.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;git&lt;/code&gt; command (and thus GitPython) accepts URLs both with and without the trailing &lt;code&gt;.git&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 29 Nov 2020 21:13:47 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-11-29:/blog/hands-on-GitPython/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Python</category><category>Git</category><category>GitPython</category><category>version control</category></item><item><title>Check Whether a File Is a Text File in Python</title><link>https://misc.legendu.net/blog/check-whether-a-file-is-a-text-file-in-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="python-magic"&gt;&lt;a href="https://github.com/ahupp/python-magic"&gt;python-magic&lt;/a&gt;&lt;a class="anchor-link" href="#python-magic"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/ahupp/python-magic"&gt;python-magic&lt;/a&gt;
is the recommended library to use for checking whether a file is a text file.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 27 Nov 2020 11:24:04 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-11-27:/blog/check-whether-a-file-is-a-text-file-in-python/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Python</category><category>binary</category><category>text</category><category>python-magic</category><category>libmagic</category><category>binaryornot</category><category>mimetypes</category></item><item><title>Slice in Rust</title><link>https://misc.legendu.net/blog/slice-in-rust/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 24 May 2021 15:20:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-05-24:/blog/slice-in-rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Rust</category><category>slice</category><category>collection</category><category>range</category></item><item><title>Equivalent of C++'s std::set_difference in Rust</title><link>https://misc.legendu.net/blog/russt-equivalent--cpp-std::set_difference/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 24 May 2021 12:24:17 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-05-24:/blog/russt-equivalent--cpp-std::set_difference/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>C++</category><category>cpp</category><category>Rust</category><category>equivalent</category><category>set_difference</category><category>vector</category></item><item><title>Generate Combinations Using Itertools in Rust</title><link>https://misc.legendu.net/blog/generate-combinations-using-itertools-in-rust/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 21 May 2021 11:55:21 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-05-21:/blog/generate-combinations-using-itertools-in-rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Rust</category><category>iterator</category><category>itertools</category><category>combination</category><category>permutation</category></item><item><title>Struct in Rust</title><link>https://misc.legendu.net/blog/rust-struct/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 18 Apr 2020 20:22:02 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-18:/blog/rust-struct/</guid><category>Computer Science</category><category>programming</category><category>Rust</category><category>struct</category><category>class</category><category>OOP</category><category>method</category><category>composition</category><category>inheritance</category></item><item><title>Hands on Box in Rust</title><link>https://misc.legendu.net/blog/hands-on-box-in-rust/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 04 May 2021 12:12:04 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-05-04:/blog/hands-on-box-in-rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Rust</category><category>Box</category><category>smart pointer</category><category>pointer</category><category>list</category></item><item><title>Get Type Name of Variables in Rust</title><link>https://misc.legendu.net/blog/get-type-name-of-variables-in-rust/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 02 May 2021 00:11:22 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-05-02:/blog/get-type-name-of-variables-in-rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Rust</category><category>type</category><category>name</category><category>variable</category><category>object</category><category>typename</category><category>type_name</category></item><item><title>Current Working Directory in Rust</title><link>https://misc.legendu.net/blog/current-working-directory-in-rust/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 01 May 2021 14:54:56 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-05-01:/blog/current-working-directory-in-rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Rust</category><category>current</category><category>directory</category><category>dir</category><category>temp</category><category>temporary</category><category>executable</category><category>environment</category><category>variable</category><category>PATH</category></item><item><title>Hands on the Num Crate in Rust</title><link>https://misc.legendu.net/blog/hands-on-the-num-crate-in-rust/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 30 Apr 2021 09:33:17 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-04-30:/blog/hands-on-the-num-crate-in-rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Rust</category><category>div_rem</category><category>num</category><category>crate</category><category>binomial</category><category>combination</category></item><item><title>Generic and Specialization in Rust</title><link>https://misc.legendu.net/blog/generic-and-specialization-in-rust/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 24 Apr 2021 16:17:23 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-04-24:/blog/generic-and-specialization-in-rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Rust</category><category>specialization</category><category>generic</category><category>autoref</category><category>macro</category></item><item><title>The Modulus Operator in Rust</title><link>https://misc.legendu.net/blog/the-modulus-operator-in-rust/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 21 Apr 2021 16:51:05 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-04-21:/blog/the-modulus-operator-in-rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category></item><item><title>Modules in Rust</title><link>https://misc.legendu.net/blog/modules-in-rust/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 19 Apr 2021 21:43:03 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-04-19:/blog/modules-in-rust/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Rust</category><category>module</category><category>crate</category><category>use</category></item><item><title>Extract Identifier Names from a SQL Query Using Sqlfluff</title><link>https://misc.legendu.net/blog/extract-identifier-names-from-a-sql-query-using-sqlfluff/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt; Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement! &lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 18 Apr 2021 18:11:45 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-04-18:/blog/extract-identifier-names-from-a-sql-query-using-sqlfluff/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Python</category><category>SQL</category><category>sqlfluff</category><category>anonymize</category><category>extract</category><category>reference</category><category>table</category><category>column</category><category>database</category></item><item><title>Tips on Sqlfluff</title><link>https://misc.legendu.net/blog/tips-on-sqlfluff/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Installation"&gt;Installation&lt;a class="anchor-link" href="#Installation"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 17 Feb 2021 09:55:38 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-02-17:/blog/tips-on-sqlfluff/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>sqlfluff</category><category>SQL</category><category>lint</category><category>linter</category><category>format</category><category>issue</category><category>error</category></item><item><title>The Walrus Operator in Python 3.8</title><link>https://misc.legendu.net/blog/the-walrus-operator-in-python-3.8/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt; Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement! &lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="List-Comprehension"&gt;List Comprehension&lt;a class="anchor-link" href="#List-Comprehension"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Notice that a walrus expression in a list comprehension must be in included in parentheses (to avoid ambiguitions).&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 16 Apr 2021 23:38:19 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-04-16:/blog/the-walrus-operator-in-python-3.8/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Python</category><category>walrus</category><category>operator</category><category>3.8</category></item><item><title>The try/except/finally Block in Python</title><link>https://misc.legendu.net/blog/try-except-finally-in-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt; Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement! &lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;The &lt;code&gt;finally&lt;/code&gt; statements are guaranteed to be executed 
 (presuming no power outage or anything outside of Python's control)
 after a &lt;code&gt;try&lt;/code&gt;/&lt;code&gt;except&lt;/code&gt; block runs 
 even if &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;break&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 15 Apr 2021 16:19:37 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-04-15:/blog/try-except-finally-in-python/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Python</category><category>try</category><category>except</category><category>finally</category><category>return</category></item><item><title>Exception and Error Handling in Python</title><link>https://misc.legendu.net/blog/exception-and-error-handling-in-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;If you need trackback information when throwing an exception use &lt;code&gt;raise ExceptionClass(msg)&lt;/code&gt;,
 otherwise, use &lt;code&gt;sys.exit(msg)&lt;/code&gt; instead.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;assert&lt;/code&gt; statement (which raises &lt;code&gt;AssertionError&lt;/code&gt; if the assertion is not met) 
 is a very good way to ensure conditions to be met.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; :::python
 assert some_condition&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 15 Dec 2020 10:33:03 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-12-15:/blog/exception-and-error-handling-in-python/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>exception</category><category>error</category><category>exception and error handling</category></item><item><title>Dataclass vs namedtuple in Python</title><link>https://misc.legendu.net/blog/dataclass-vs-namedtuple-in-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Prefer &lt;code&gt;Dataclass&lt;/code&gt; to &lt;code&gt;namedtuple&lt;/code&gt; for many reasons.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A namedtuple is immutable while a dataclass can be both 
  mutable (&lt;code&gt;frozen=False&lt;/code&gt; which is the default) or immutable (&lt;code&gt;frozen=True&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;However,
namedtuple does have one advantage over dataclass. 
Members of a namedtuple is assible both via the dot operator and index.
In situations where both dot accessing and index accessing of members is required,
a namedtuple comes handy.
For examples, 
a list of namedtuple objects can be used as the data for creating a pandas DataFrame
but not a list of dataclass objects.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 14 Oct 2020 23:34:04 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-10-14:/blog/dataclass-vs-namedtuple-in-python/</guid><category>Computer Science</category><category>Computer Science</category><category>Python</category><category>programming</category><category>collections</category><category>namedtuple</category><category>dataclass</category></item><item><title>Memory Profiler for Python</title><link>https://misc.legendu.net/blog/memory-profiler-for-python/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 09 Jun 2020 10:00:34 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-09:/blog/memory-profiler-for-python/</guid><category>Computer Science</category><category>Computer Science</category><category>Python</category><category>memory</category><category>profile</category><category>fil</category><category>profiler</category></item><item><title>Handling Complicated Data Types in Python and PySpark</title><link>https://misc.legendu.net/blog/python-complicated-data-types/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;An element in a pandas DataFrame can be any (complicated) type in Python.
 To save a padnas DataFrame with arbitrary (complicated) types as it is, 
 you have to use 
 &lt;a href="http://www.legendu.net/misc/blog/serialize-and-deserialize-object-using-pickle-in-python"&gt;the pickle module&lt;/a&gt;
 .
 The method &lt;code&gt;pandas.DataFrame.to_pickle&lt;/code&gt; 
 (which is simply a wrapper over &lt;code&gt;pickle.dump&lt;/code&gt;)
 serialize the DataFrame to a pickle file
 while the method &lt;code&gt;pandas.read_pickle&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 07 May 2020 20:42:08 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-05-07:/blog/python-complicated-data-types/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>PySpark</category><category>Parquet</category><category>IO</category><category>data types</category><category>complicated</category><category>None</category><category>list</category><category>ndarray</category><category>StructType</category><category>StructField</category></item><item><title>Hands on the Python Library tomlkit</title><link>https://misc.legendu.net/blog/hands-on-python-library-tomlkit/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt; Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement! &lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-&amp;amp;-Traps"&gt;Tips &amp;amp; Traps&lt;a class="anchor-link" href="#Tips-&amp;amp;-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Please refer to
 &lt;a href="https://www.legendu.net/en/blog/parse-toml-file-in-python/"&gt;Parse TOML File in Python&lt;/a&gt;
 for general tips on parsing TOML in Python.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Installatoion"&gt;Installatoion&lt;a class="anchor-link" href="#Installatoion"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 30 Mar 2021 13:50:07 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-03-30:/blog/hands-on-python-library-tomlkit/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>TOML</category><category>Python</category><category>tomlkit</category></item><item><title>Boolean Column Operators and Functions in Spark</title><link>https://misc.legendu.net/blog/boolean-column-operators-and-functions-in-spark/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt; Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement! &lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 30 Mar 2021 11:46:12 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-03-30:/blog/boolean-column-operators-and-functions-in-spark/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Spark</category><category>big data</category><category>PySpark</category><category>column</category><category>operator</category><category>function</category><category>bool</category><category>boolean</category></item><item><title>Hands on the Python Library DeepDiff</title><link>https://misc.legendu.net/blog/hands-on-the-python-library-deepdiff/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt; Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement! &lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 16 Mar 2021 13:34:32 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-03-16:/blog/hands-on-the-python-library-deepdiff/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Python</category><category>diff</category><category>deep</category><category>DeepDiff</category><category>object</category><category>compare</category></item><item><title>Type Annotation in Python</title><link>https://misc.legendu.net/blog/type-annotation-in-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://mypy.readthedocs.io/en/stable/cheat_sheet_py3.html#built-in-types"&gt;Type hints cheat sheet (Python 3)&lt;/a&gt;
 is a quick cheat sheet showing how the PEP 484 type annotation notation represents various common types in Python 3.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Notice that the annotation on List and Tuple are different. 
 &lt;code&gt;List[T]&lt;/code&gt; stands for a variable length list of elements with type &lt;code&gt;T&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 15 Jun 2020 17:03:11 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-15:/blog/type-annotation-in-python/</guid><category>Computer Science</category><category>Computer Science</category><category>Python</category><category>type annotation</category><category>forward reference</category></item><item><title>Tips on docker-py Library</title><link>https://misc.legendu.net/blog/tips-on-docker-py-library/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt; Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement! &lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 15 Jan 2021 11:02:39 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-01-15:/blog/tips-on-docker-py-library/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Python</category><category>Docker</category><category>docker-py</category><category>container</category></item><item><title>String in Python</title><link>https://misc.legendu.net/blog/string-in-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3/library/stdtypes.html#textseq"&gt;https://docs.python.org/3/library/stdtypes.html#textseq&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Since the &lt;code&gt;str&lt;/code&gt; class is immutable in Python,
 no method of the &lt;code&gt;str&lt;/code&gt; class is in-place.
 Instead,
 all methods of the &lt;code&gt;str&lt;/code&gt; class returns a new copy of string.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;\&lt;/code&gt; needs to be escaped (i.e., use &lt;code&gt;\\&lt;/code&gt;) in triple quotes.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="The-in-Operator"&gt;The &lt;code&gt;in&lt;/code&gt; Operator&lt;a class="anchor-link" href="#The-in-Operator"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;There is no method named &lt;code&gt;contains&lt;/code&gt; in the &lt;code&gt;str&lt;/code&gt; class.
You can either use the &lt;code&gt;in&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 14 Oct 2019 13:02:44 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-10-14:/blog/string-in-python/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>string</category><category>str</category><category>character</category></item><item><title>Format a String in Python</title><link>https://misc.legendu.net/blog/python-string-format/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3/library/stdtypes.html#textseq"&gt;https://docs.python.org/3/library/stdtypes.html#textseq&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.techbeamers.com/python-format-string-list-dict/"&gt;https://www.techbeamers.com/python-format-string-list-dict/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.techbeamers.com/python-format-string-list-dict/#format-a-python-string"&gt;https://www.techbeamers.com/python-format-string-list-dict/#format-a-python-string&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="str.format"&gt;str.format&lt;a class="anchor-link" href="#str.format"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;An exception will be thrown if the value for a key in the string is not specified,
which means that you must specify values for all keys.
However, 
it is OK if you specify values for keys that do not exist in the string.
That is you can specify values for more keys than needed.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 14 Apr 2020 13:01:02 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-14:/blog/python-string-format/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>string</category><category>str</category><category>format</category></item><item><title>Implement Singleton in Python</title><link>https://misc.legendu.net/blog/implement-singleton-in-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Module is a good alternative to singletons in Python.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 06 Feb 2021 02:05:02 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-02-06:/blog/implement-singleton-in-python/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category></item><item><title>Programming in Shell</title><link>https://misc.legendu.net/blog/programming-in-shell/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="String"&gt;String&lt;a class="anchor-link" href="#String"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id="Regular-Expression-Comparison"&gt;Regular Expression Comparison&lt;a class="anchor-link" href="#Regular-Expression-Comparison"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/229551/how-to-check-if-a-string-contains-a-substring-in-bash"&gt;https://stackoverflow.com/questions/229551/how-to-check-if-a-string-contains-a-substring-in-bash&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="Bash-Programming"&gt;Bash Programming&lt;a class="anchor-link" href="#Bash-Programming"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;case ... esac is different from switch(){} in C/C++.
 You do not have to return/exit manually after each branch.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;not condition&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;!&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="Shell-Programing-Trick"&gt;Shell Programing Trick&lt;a class="anchor-link" href="#Shell-Programing-Trick"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Generate 00, 01, ..., to 25.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; for i in {00..25}; do echo $i; done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; seq -f %02g 0 25&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="Shell-Scripting"&gt;Shell Scripting&lt;a class="anchor-link" href="#Shell-Scripting"&gt;&amp;#182;&lt;/a&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 22 Oct 2020 17:11:05 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-10-22:/blog/programming-in-shell/</guid><category>Computer Science</category><category>Computer Science</category><category>Shell</category><category>Bash</category><category>programming</category><category>script</category></item><item><title>Enum in Python</title><link>https://misc.legendu.net/blog/enum-in-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt; Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement! &lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;You must assign a value to each enum member. &lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 20 Jan 2021 10:14:32 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-01-20:/blog/enum-in-python/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Python</category><category>enum</category></item><item><title>Hands on the logging Module in Python</title><link>https://misc.legendu.net/blog/python-logging-module/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 10 Jan 2021 17:44:33 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-01-10:/blog/python-logging-module/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>logging</category></item><item><title>Select All Columns Except a Few from a Table</title><link>https://misc.legendu.net/blog/select-all-columns-except-a-few-from-a-table/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt; Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement! &lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;There is no (direct) way of select all columns except a few from a table using SQL.
However, 
this is easily doable with DataFrame APIs (pandas, Spark/PySpark, etc.).&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 10 Jan 2021 13:04:59 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-01-10:/blog/select-all-columns-except-a-few-from-a-table/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Python</category><category>select</category><category>all</category><category>except</category><category>Spark</category><category>PySpark</category></item><item><title>Get Size of Tables on HDFS</title><link>https://misc.legendu.net/blog/get-size-of-tables-on-hdfs/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt; Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement! &lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="The-HDFS-Way"&gt;The HDFS Way&lt;a class="anchor-link" href="#The-HDFS-Way"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;You can use the &lt;code&gt;hdfs dfs -du /path/to/table&lt;/code&gt; command 
or &lt;code&gt;hdfs dfs -count -q -v -h /path/to/table&lt;/code&gt;
to get the size of an HDFS path (or table). 
However, 
this only works if the cluster supports HDFS. 
If a Spark cluster exposes only JDBC/ODBC APIs, 
this method does not work.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 10 Nov 2020 12:41:56 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-11-10:/blog/get-size-of-tables-on-hdfs/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>HDFS</category><category>table</category><category>size</category><category>Spark</category><category>SQL</category><category>Spark SQL</category><category>Hive</category></item><item><title>Tips on NetworkX</title><link>https://misc.legendu.net/blog/tips-on-networkx/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt; Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement! &lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 10 Jan 2021 12:20:18 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-01-10:/blog/tips-on-networkx/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Python</category><category>NetworkX</category><category>network</category><category>graph</category></item><item><title>AI Learning</title><link>https://misc.legendu.net/blog/ai-learning/</link><description>&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Machine Learning Algorithms" src="https://jixta.files.wordpress.com/2015/11/machinelearningalgorithms.png"&gt;
The picture comes from &lt;a href="https://jixta.wordpress.com/2015/07/17/machine-learning-algorithms-mindmap/"&gt;Machine Learning Algorithms Mindmap&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="feature-engineering"&gt;Feature Engineering&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/misc/blog/handling-categorical-variables-in-machine-learning/"&gt;Handling Categorical Variables in Machine Learning&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="regularization-in-machine-learning-models"&gt;&lt;a href="http://www.legendu.net/misc/blog/regularization-in-machine-learning-models/"&gt;Regularization in Machine Learning Models&lt;/a&gt;&lt;/h2&gt;
&lt;h2 id="ensemble"&gt;&lt;a href="http://www.legendu.net/misc/blog/ai-ensemble/"&gt;Ensemble&lt;/a&gt;&lt;/h2&gt;
&lt;h2 id="frameworks"&gt;Frameworks&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/misc/blog/libraries-for-gradient-boosting/"&gt;Libraries for Gradient Boosting&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="big-data-spark-friendly-frameworks"&gt;Big-data (Spark) Friendly Frameworks …&lt;/h3&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 08 Dec 2013 23:07:57 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2013-12-08:/blog/ai-learning/</guid><category>AI</category><category>AI</category><category>machine learning</category><category>statistics</category><category>data science</category></item><item><title>Tips on Omegaconf</title><link>https://misc.legendu.net/blog/tips-on-omegaconf/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt; Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement! &lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;omegaconf&lt;/code&gt; can parse command-line options too. 
However, 
unlike &lt;code&gt;argparse&lt;/code&gt; it does not enforce any constraint on command-line options.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 08 Jan 2021 18:25:38 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-01-08:/blog/tips-on-omegaconf/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>omegaconf</category><category>Python</category><category>config</category><category>configuration</category></item><item><title>Path Pattern Matching in Python</title><link>https://misc.legendu.net/blog/path-pattern-matching-in-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt; Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement! &lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Pathspec is preferred over zgitignore as the latter is not actively maintained.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="pathspec"&gt;&lt;a href="https://github.com/cpburnz/python-path-specification"&gt;pathspec&lt;/a&gt;&lt;a class="anchor-link" href="#pathspec"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/cpburnz/python-path-specification"&gt;pathspec&lt;/a&gt;
is a utility library for &lt;code&gt;gitignore&lt;/code&gt; style pattern matching of file paths.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="zgitignore"&gt;&lt;a href="https://github.com/zb3/zgitignore"&gt;zgitignore&lt;/a&gt;&lt;a class="anchor-link" href="#zgitignore"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/zb3/zgitignore"&gt;zgitignore&lt;/a&gt;
checks if a file is ignored by a &lt;code&gt;.zgitignore&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 04 Jan 2021 09:59:49 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2021-01-04:/blog/path-pattern-matching-in-python/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category></item><item><title>Tips on Jinja</title><link>https://misc.legendu.net/blog/tips-on-jinja/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt; Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement! &lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 30 Dec 2020 14:06:16 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-12-30:/blog/tips-on-jinja/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Jinja</category><category>template</category><category>Python</category></item><item><title>Koalas is pandas API on PySpark</title><link>https://misc.legendu.net/blog/pyspark-koalas/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="References"&gt;References&lt;a class="anchor-link" href="#References"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/databricks/koalas"&gt;https://github.com/databricks/koalas&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://databricks.com/blog/2020/08/11/interoperability-between-koalas-and-apache-spark.html"&gt;https://databricks.com/blog/2020/08/11/interoperability-between-koalas-and-apache-spark.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://notebooks.gesis.org/binder/jupyter/user/databricks-koalas-mxw72n1l/notebooks/docs/source/getting_started/10min.ipynb"&gt;https://notebooks.gesis.org/binder/jupyter/user/databricks-koalas-mxw72n1l/notebooks/docs/source/getting_started/10min.ipynb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spark.apache.org/docs/latest/api/python/pyspark.sql.html"&gt;https://spark.apache.org/docs/latest/api/python/pyspark.sql.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spark.apache.org/docs/latest/api/python/pyspark.sql.html#pyspark.sql.DataFrame"&gt;https://spark.apache.org/docs/latest/api/python/pyspark.sql.html#pyspark.sql.DataFrame&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spark.apache.org/docs/latest/api/python/pyspark.sql.html#pyspark.sql.Column"&gt;https://spark.apache.org/docs/latest/api/python/pyspark.sql.html#pyspark.sql.Column&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spark.apache.org/docs/latest/api/python/pyspark.sql.html#module-pyspark.sql.functions"&gt;https://spark.apache.org/docs/latest/api/python/pyspark.sql.html#module-pyspark.sql.functions&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 11 Dec 2020 23:05:28 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-12-11:/blog/pyspark-koalas/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>PySpark</category><category>big data</category><category>Koalas</category><category>pandas</category></item><item><title>Tips on Optuna</title><link>https://misc.legendu.net/blog/tips-on-optuna/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt; Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement! &lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://github.com/optuna/optuna"&gt;Optuna&lt;/a&gt; is a good framework for hyper parameter tuning in machine learning.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="References"&gt;References&lt;a class="anchor-link" href="#References"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/optuna/optuna"&gt;https://github.com/optuna/optuna&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/optuna/optuna/tree/master/examples"&gt;https://github.com/optuna/optuna/tree/master/examples&lt;/a&gt;&lt;br&gt;
&lt;a href="https://medium.com/optuna/lightgbm-tuner-new-optuna-integration-for-hyperparameter-optimization-8b7095e99258"&gt;LightGBM Tuner: New Optuna Integration for Hyperparameter Optimization&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 03 Dec 2020 01:30:29 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-12-03:/blog/tips-on-optuna/</guid><category>Computer Science</category><category>Computer Science</category><category>machine learning</category><category>data science</category><category>AI</category><category>data mining</category><category>Optuna</category><category>hyper</category><category>parameter</category><category>tuning</category><category>tune</category></item><item><title>Hands on the json Module in Python</title><link>https://misc.legendu.net/blog/hands-on-json-python.path/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;It is suggested that you avoid using JSON for serializing and deserializing data. 
 Please refer to
 &lt;a href="https://www.legendu.net/misc/blog/json-tips/#shortcomes-of-json"&gt;Shotcomes of JSON&lt;/a&gt; 
 for detailed discussions on this. 
 TOML and YAML are better text-based alternatives to JSON. 
 If serialization and deserialization is done in Python only, 
 &lt;a href="http://www.legendu.net/misc/blog/serialize-and-deserialize-object-using-pickle-in-python"&gt;pickle&lt;/a&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 28 Nov 2020 11:25:31 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-11-28:/blog/hands-on-json-python.path/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>json</category><category>serialization</category><category>deserialization</category></item><item><title>Hands on SQLite3</title><link>https://misc.legendu.net/blog/hands-on-sqlite3/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Do NOT use SQLite3 on network filesystems (NFS, SAMBA, etc).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;.schema&lt;/code&gt; show create statement of a table&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can force query to keep the original order of rows 
 by applying &lt;code&gt;order by rowid&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SQLite3 supports full-text search by the FTS5 extension (since 3.9.0).
It is suggested that you use the &lt;code&gt;porter&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 28 Nov 2020 11:25:31 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-11-28:/blog/hands-on-sqlite3/</guid><category>Computer Science</category><category>programming</category><category>SQLite3</category><category>SQL</category></item><item><title>Hands on the Python Module Packaging</title><link>https://misc.legendu.net/blog/hands-on-the-python-module-packaging/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt; Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement! &lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Version-Handling"&gt;Version Handling&lt;a class="anchor-link" href="#Version-Handling"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 23 Nov 2020 00:16:31 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-11-23:/blog/hands-on-the-python-module-packaging/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Python</category><category>package</category><category>packaging</category><category>version</category><category>semantic</category><category>specifier</category><category>restriction</category><category>requirement</category></item><item><title>Hands on the requests Module in Python</title><link>https://misc.legendu.net/blog/python-requests/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;It is suggested that you use the requests module instead of urllib
 unless you want to have minimal 3rd-party dependencies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Response.raise_for_status&lt;/code&gt; is a convenient method for raising an exception 
 corresponding to the HTTP status code.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="References"&gt;References&lt;a class="anchor-link" href="#References"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="http://www.legendu.net/misc/blog/python-download-file/"&gt;http://www.legendu.net/misc/blog/python-download-file/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stackabuse.com/download-files-with-python/"&gt;https://stackabuse.com/download-files-with-python/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/22676/how-do-i-download-a-file-over-http-using-python"&gt;https://stackoverflow.com/questions/22676/how-do-i-download-a-file-over-http-using-python&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 22 Nov 2020 23:51:11 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-11-22:/blog/python-requests/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>requests</category><category>web</category><category>network</category></item><item><title>Parse Semantic Version in Python</title><link>https://misc.legendu.net/blog/parse-semantic-version-in-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt; Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement! &lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;There are at least 3 packages (&lt;code&gt;packaing&lt;/code&gt;, &lt;code&gt;python-semver&lt;/code&gt; and) in Python which can help you work with semantic versions.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="packaging"&gt;&lt;a href="http://www.legendu.net/misc/blog/tips-on-the-python-module-packaging"&gt;packaging&lt;/a&gt;&lt;a class="anchor-link" href="#packaging"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Please refer to 
&lt;a href="http://www.legendu.net/misc/blog/tips-on-the-python-module-packaging"&gt;packaging&lt;/a&gt;
for more details.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="python-semver"&gt;&lt;a href="https://github.com/python-semver/python-semver"&gt;python-semver&lt;/a&gt;&lt;a class="anchor-link" href="#python-semver"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="python-semanticversion"&gt;&lt;a href="https://github.com/rbarrois/python-semanticversion"&gt;python-semanticversion&lt;/a&gt;&lt;a class="anchor-link" href="#python-semanticversion"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 22 Nov 2020 13:39:02 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-11-22:/blog/parse-semantic-version-in-python/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category></item><item><title>Filter pandas DataFrames in Python</title><link>https://misc.legendu.net/blog/filter-pandas-dataframe-python/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 21 Nov 2020 19:01:17 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-11-21:/blog/filter-pandas-dataframe-python/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>pandas</category><category>DataFrame</category><category>filter</category><category>query</category></item><item><title>Hands on Tensor in PyTorch</title><link>https://misc.legendu.net/blog/python-pytorch-tensor/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 18 Nov 2020 11:05:23 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-11-18:/blog/python-pytorch-tensor/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>AI</category><category>data science</category><category>machine learning</category><category>deep learning</category><category>PyTorch</category><category>tensor</category></item><item><title>Misc Tips on Java</title><link>https://misc.legendu.net/blog/misc-tips-java/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Use &lt;code&gt;==&lt;/code&gt; (instead of the method &lt;code&gt;Object.equals&lt;/code&gt;) to compare objects is a common and tricky mistake for beginner.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You cannot define an abstract static method. 
 This is because "abstract" means that no functionality is implemented 
 while "static" means that functionality exists even there is no object. 
 The two conflict in concept.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 10 Nov 2020 00:58:15 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-11-10:/blog/misc-tips-java/</guid><category>Computer Science</category><category>programming</category><category>JVM</category><category>Java</category><category>instantiate</category><category>array</category><category>private</category><category>curly brace</category></item><item><title>Tips on the Shell command ps</title><link>https://misc.legendu.net/blog/tips-on-ps/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Show full comand of processes.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 03 Oct 2020 23:48:48 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-10-03:/blog/tips-on-ps/</guid><category>Computer Science</category><category>Computer Science</category><category>ps</category><category>Linux</category><category>Unix</category><category>process</category><category>shell</category></item><item><title>Create a Date Range in Python</title><link>https://misc.legendu.net/blog/python-date-range/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="pandas.date_range"&gt;&lt;code&gt;pandas.date_range&lt;/code&gt;&lt;a class="anchor-link" href="#pandas.date_range"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 01 Nov 2020 19:59:37 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-11-01:/blog/python-date-range/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>date</category><category>datetime</category><category>time</category><category>range</category><category>sequence</category></item><item><title>Hands on the tempfile Module in Python</title><link>https://misc.legendu.net/blog/hands-on-tempfile/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3/library/tempfile.html"&gt;https://docs.python.org/3/library/tempfile.html&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;This module creates temporary files and directories. 
It works on all supported platforms. 
TemporaryFile, NamedTemporaryFile, TemporaryDirectory, and SpooledTemporaryFile are high-level interfaces 
which provide automatic cleanup and can be used as context managers. 
mkstemp() and mkdtemp() are lower-level functions which require manual cleanup.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 28 Oct 2020 21:55:58 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-10-28:/blog/hands-on-tempfile/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>tempfile</category><category>temp</category><category>temporary file</category></item><item><title>Hands on the hashlib Module in Python</title><link>https://misc.legendu.net/blog/hands-on-the-hashlib-module-in-python/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 25 Oct 2020 20:18:27 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-10-25:/blog/hands-on-the-hashlib-module-in-python/</guid><category>Computer Science</category><category>Computer Science</category><category>hash</category><category>hashlib</category><category>Python</category><category>programming</category><category>md5</category><category>sha256</category></item><item><title>Hands on the Zoneinfo Module in Python</title><link>https://misc.legendu.net/blog/hands-on-the-zoneinfo-module-in-python/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 24 Oct 2020 12:43:20 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-10-24:/blog/hands-on-the-zoneinfo-module-in-python/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Python</category><category>date</category><category>time</category><category>timezone</category><category>zoneinfo</category></item><item><title>Hands on the Graphlib Module in Python</title><link>https://misc.legendu.net/blog/hands-on-the-graphlib-module-in-python/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 24 Oct 2020 12:41:35 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-10-24:/blog/hands-on-the-graphlib-module-in-python/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Python</category><category>graphlib</category><category>graph</category><category>network</category><category>topology</category></item><item><title>Hands on the Resource Module in Python</title><link>https://misc.legendu.net/blog/hands-on-the-resource-module-in-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;This module provides basic mechanisms 
for measuring and controlling system resources utilized by &lt;strong&gt;a process and its subprocesses&lt;/strong&gt;.
It cannot be used to check resource usage of other processes.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 24 Oct 2020 12:24:03 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-10-24:/blog/hands-on-the-resource-module-in-python/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Python</category><category>resource</category><category>CPU</category><category>memory</category></item><item><title>Check Resources Used by Processes Using Python</title><link>https://misc.legendu.net/blog/check-resources-used-by-processes-using-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Use-the-resource-Library"&gt;&lt;a href="http://www.legendu.net/misc/blog/hands-on-the-resource-module-in-python"&gt;Use the &lt;code&gt;resource&lt;/code&gt; Library&lt;/a&gt;&lt;a class="anchor-link" href="#Use-the-resource-Library"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Please refer to 
&lt;a href="http://www.legendu.net/misc/blog/hands-on-the-resource-module-in-python"&gt;Hands on the resource Module in Python&lt;/a&gt;
for more details.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Use-the-tracemalloc-Library"&gt;Use the &lt;code&gt;tracemalloc&lt;/code&gt; Library&lt;a class="anchor-link" href="#Use-the-tracemalloc-Library"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://docs.python.org/3/library/tracemalloc.html#module-tracemalloc"&gt;https://docs.python.org/3/library/tracemalloc.html#module-tracemalloc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The tracemalloc module is a debug tool to trace memory blocks allocated by Python. It provides the following information:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Traceback where an object was allocated&lt;/li&gt;
&lt;li&gt;Statistics on allocated memory blocks per filename and per line number: total size, number and average size of allocated memory blocks&lt;/li&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 24 Oct 2020 11:36:01 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-10-24:/blog/check-resources-used-by-processes-using-python/</guid><category>Computer Science</category><category>Computer Science</category><category>programming</category><category>Python</category><category>resource</category><category>process</category><category>system</category><category>psutil</category><category>tracemalloc</category></item><item><title>Hands on the textwrap Module in Python</title><link>https://misc.legendu.net/blog/tips-on-textwrap/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 23 Oct 2020 13:31:35 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-10-23:/blog/tips-on-textwrap/</guid><category>Computer Science</category><category>Computer Science</category><category>text</category><category>string</category><category>str</category><category>textwrap</category><category>Python</category></item><item><title>Parsing YAML in Python</title><link>https://misc.legendu.net/blog/python-parse-yaml/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/yaml/pyyaml"&gt;PyYAML&lt;/a&gt; (YAML 1.1 currently)
 and
 &lt;a href="https://bitbucket.org/ruamel/yaml/src/default/"&gt;ruamel.yaml&lt;/a&gt; (YAML 1.2)
 are 2 Python libraries for parsing YAML. 
 PyYAML is more widely used.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PyYAML is preferred over &lt;code&gt;json&lt;/code&gt; for serialization and deserialization for multiple reasons.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PyYAML is a superset of json.&lt;/li&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 17 Oct 2020 12:32:23 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-10-17:/blog/python-parse-yaml/</guid><category>Computer Science</category><category>Computer Science</category><category>PyYAML</category><category>YAML</category><category>IO</category><category>JSON</category></item><item><title>Parse Xml in Python</title><link>https://misc.legendu.net/blog/parse-xml-in-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;xml.etree.ElementTree&lt;/p&gt;
&lt;p&gt;from html.parser import HTMLParser&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/"&gt;https://www.crummy.com/software/BeautifulSoup/bs4/doc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/lxml/lxml"&gt;https://github.com/lxml/lxml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;xml.etree.ElementTree&lt;/code&gt; is for parsing strict XML text.
Do NOT use &lt;code&gt;xml.etree.ElementTree&lt;/code&gt; to parse HTML string.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 07 Oct 2020 15:43:47 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-10-07:/blog/parse-xml-in-python/</guid><category>Computer Science</category><category>Computer Science</category><category>Python</category><category>XML</category><category>HTML</category><category>XHTML</category><category>parse</category><category>ElementTree</category><category>HTMLParser</category><category>BeautifulSoup</category><category>Beautiful Soup</category></item><item><title>Read/Write Files/Tables in Spark</title><link>https://misc.legendu.net/blog/spark-io/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="References"&gt;References&lt;a class="anchor-link" href="#References"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.sql.DataFrameReader"&gt;DataFrameReader&lt;/a&gt; 
APIs&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.sql.DataFrameWriter"&gt;DataFrameWriter&lt;/a&gt;
APIs&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spark.apache.org/docs/latest/sql-programming-guide.html#data-sources"&gt;https://spark.apache.org/docs/latest/sql-programming-guide.html#data-sources&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;It is suggested that you 
 &lt;a href="https://stackoverflow.com/questions/39926411/provide-schema-while-reading-csv-file-as-a-dataframe"&gt;specify a schema when reading text files&lt;/a&gt;.
 If a schema is not specified when reading text files,
 it is good practice to check the types of columns (as the types are inferred).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do NOT read data from and write data to the same path in Spark!
 Due to lazy evaluation of Spark, 
 the path will likely be cleared before it is read into Spark,
 which will throw IO exceptions.
 And the worst part is that your data on HDFS is removed but recoverable.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 27 Sep 2020 23:00:01 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-09-27:/blog/spark-io/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>IO</category><category>read</category><category>write</category><category>file</category><category>table</category></item><item><title>UDF in Spark</title><link>https://misc.legendu.net/blog/spark-scala-udf/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Use the higher-level standard Column-based functions with Dataset operators 
whenever possible before reverting to using your own custom UDF functions 
since UDFs are a blackbox for Spark and so it does not even try to optimize them.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 05 Sep 2020 15:57:16 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-09-05:/blog/spark-scala-udf/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>UDF</category><category>user-defined function</category></item><item><title>Read Text File into a pandas DataFrame</title><link>https://misc.legendu.net/blog/python-pandas-read_csv/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Advanced-Options"&gt;Advanced Options&lt;a class="anchor-link" href="#Advanced-Options"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The argument &lt;code&gt;sep&lt;/code&gt; supports regular expression!
 For example,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; :::python
 df = pd.read_csv(file, sep+" +")&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;nrows: control the number of rows to read
skiprows,
skip blank lines (the default behavior)&lt;/p&gt;
&lt;p&gt;namesarray-like, optional
List of column names to use. If the file contains a header row, then you should explicitly pass header=0 to override the column names. Duplicates in this list are not allowed.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 05 Sep 2020 13:46:29 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-09-05:/blog/python-pandas-read_csv/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>pandas</category><category>DataFrame</category><category>read_csv</category></item><item><title>Hands on the Socket Module in Python</title><link>https://misc.legendu.net/blog/hands-on-the-socket-module-in-python/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 05 Sep 2020 13:15:27 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-09-05:/blog/hands-on-the-socket-module-in-python/</guid><category>Computer Science</category><category>Computer Science</category></item><item><title>Download Files from the Internet in Python</title><link>https://misc.legendu.net/blog/python-download-file/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;The shell command &lt;code&gt;curl&lt;/code&gt; and &lt;code&gt;wget&lt;/code&gt; can be called (using &lt;code&gt;os.system&lt;/code&gt; or &lt;code&gt;subprocess.run&lt;/code&gt;)
to download files from internet. 
You can also download files using Python modules directly of course.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 04 Sep 2020 09:16:10 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-09-04:/blog/python-download-file/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>web</category><category>network</category><category>file</category><category>internet</category><category>download</category><category>requests</category><category>urllib</category><category>wget</category></item><item><title>Slicing of Pandas Dataframes</title><link>https://misc.legendu.net/blog/slicing-of-pandas-dataframes/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 17 Aug 2020 22:54:31 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-08-17:/blog/slicing-of-pandas-dataframes/</guid><category>Computer Science</category><category>Computer Science</category><category>Python</category><category>pandas</category><category>DataFrame</category><category>slicing</category><category>slice</category><category>subset</category><category>iloc</category></item><item><title>Hands on the tqdm Module in Python</title><link>https://misc.legendu.net/blog/python-tqdm/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Simple-Use-Case"&gt;Simple Use Case&lt;a class="anchor-link" href="#Simple-Use-Case"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The usage of the tqdm module is really simple. 
All you need is to import the &lt;code&gt;tqdm&lt;/code&gt; function from the &lt;code&gt;tqdm&lt;/code&gt; module,
and then wrap the function &lt;code&gt;tqdm&lt;/code&gt; over the iterable object that you want iterate over.
This is really convenient if you have a long running task
and want to report the progress of the task.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 17 Aug 2020 13:27:22 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-08-17:/blog/python-tqdm/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>tdqm</category><category>progress bar</category><category>trange</category></item><item><title>Iterate All Descendant Files in a Directory in Python</title><link>https://misc.legendu.net/blog/python-iterate-all-descendant/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Using-pathlib.Path.glob"&gt;Using pathlib.Path.glob&lt;a class="anchor-link" href="#Using-pathlib.Path.glob"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;This is the easiest way to iterate through all descendant files of a directory in Python.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 16 Aug 2020 17:55:43 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-08-16:/blog/python-iterate-all-descendant/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>iterate</category><category>recursive</category><category>files</category><category>directory</category><category>directories</category><category>sub</category><category>subfiles</category><category>sub-files</category><category>subdirectories</category><category>descendant</category></item><item><title>Understand Index in pandas</title><link>https://misc.legendu.net/blog/python-pandas-index/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;There are multiple ways to update the index of a DataFrame or Series. 
 First,
 you can assign a new &lt;code&gt;Series&lt;/code&gt; or &lt;code&gt;Index&lt;/code&gt; object to the index of a DataFrame or Series.
 Or you can use methods such as &lt;code&gt;DataFrame.set_index&lt;/code&gt; or &lt;code&gt;DataFrame.reset_index&lt;/code&gt;.
 &lt;code&gt;DataFrame.reset_index&lt;/code&gt; resets the index of a DataFrame/Series 
 to an integer index starting from 0.
 The old index is kept by default but can be dropped using the option &lt;code&gt;drop=True&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 10 Aug 2020 11:01:40 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-08-10:/blog/python-pandas-index/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>pandas</category><category>Index</category><category>DataFrame</category><category>Series</category></item><item><title>MultiIndexes in pandas</title><link>https://misc.legendu.net/blog/python-pandas-multiindex/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Multi-Index"&gt;Multi-Index&lt;a class="anchor-link" href="#Multi-Index"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 10 Aug 2020 11:01:40 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-08-10:/blog/python-pandas-multiindex/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>pandas</category><category>Index</category><category>DataFrame</category><category>MultiIndex</category></item><item><title>Use the Blob Data Type in Sqlite3</title><link>https://misc.legendu.net/blog/use-the-blob-data-type-in-sqlite3/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 07 Aug 2020 17:33:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-08-07:/blog/use-the-blob-data-type-in-sqlite3/</guid><category>Computer Science</category><category>Computer Science</category><category>SQLite3</category><category>SQL</category><category>data type</category><category>Blob</category></item><item><title>My Configuration Script for a New Ubuntu Machine</title><link>https://misc.legendu.net/blog/my-configuration-script-for-a-new-ubuntu-machine/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 07 Aug 2020 16:57:52 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-08-07:/blog/my-configuration-script-for-a-new-ubuntu-machine/</guid><category>OS</category><category>Linux</category><category>Python</category><category>Ubuntu</category></item><item><title>Pandas IO</title><link>https://misc.legendu.net/blog/pandas-io/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 07 Aug 2020 09:32:09 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-08-07:/blog/pandas-io/</guid><category>Computer Science</category><category>Computer Science</category><category>pandas</category><category>IO</category><category>DataFrame</category><category>Parquet</category><category>BytesIO</category><category>read</category><category>write</category><category>schema</category><category>version</category></item><item><title>Calculate Hash of a Directory in Python</title><link>https://misc.legendu.net/blog/calculate-hash-of-a-directory-in-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/andhus/dirhash-python"&gt;https://github.com/andhus/dirhash-python&lt;/a&gt;
is prefered to 
&lt;a href="https://github.com/cakepietoast/checksumdir"&gt;https://github.com/cakepietoast/checksumdir&lt;/a&gt;
.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="References"&gt;References&lt;a class="anchor-link" href="#References"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/andhus/dirhash-python"&gt;https://github.com/andhus/dirhash-python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/cakepietoast/checksumdir"&gt;https://github.com/cakepietoast/checksumdir&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 04 Aug 2020 08:47:43 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-08-04:/blog/calculate-hash-of-a-directory-in-python/</guid><category>Computer Science</category><category>Computer Science</category><category>Python</category><category>directory</category><category>dir</category><category>hash</category><category>md5sum</category><category>recursive</category></item><item><title>Convert Between a Pandas.Series and a Dict-Like Object</title><link>https://misc.legendu.net/blog/convert-between-a-pandas.Series-and-a-dict-like-object/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 31 Jul 2020 09:52:05 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-07-31:/blog/convert-between-a-pandas.Series-and-a-dict-like-object/</guid><category>Computer Science</category><category>Computer Science</category><category>pandas</category><category>Series</category><category>dict</category></item><item><title>Update a pandas DataFrame</title><link>https://misc.legendu.net/blog/python-pandas-update/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 31 Jul 2020 09:44:15 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-07-31:/blog/python-pandas-update/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>pandas</category><category>DataFrame</category><category>update</category></item><item><title>Add level to a MultiIndexes in pandas</title><link>https://misc.legendu.net/blog/python-pandas-multiindex-add-level/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 31 Jul 2020 09:39:02 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-07-31:/blog/python-pandas-multiindex-add-level/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>pandas</category><category>Index</category><category>DataFrame</category><category>MultiIndex</category><category>add level</category></item><item><title>Construct MultiIndexes in pandas</title><link>https://misc.legendu.net/blog/python-pandas-multiindex-construct/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 31 Jul 2020 09:39:02 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-07-31:/blog/python-pandas-multiindex-construct/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>pandas</category><category>Index</category><category>DataFrame</category><category>MultiIndex</category><category>construct</category></item><item><title>Reset the Index of a pandas DataFrame</title><link>https://misc.legendu.net/blog/python-pandas-reset_index/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="reset_index"&gt;reset_index&lt;a class="anchor-link" href="#reset_index"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;By default &lt;code&gt;reset_index&lt;/code&gt; returns a copy rather than modify the original data frame. 
You can specify &lt;code&gt;inplace = True&lt;/code&gt; to overwrite the behavior.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="Series"&gt;Series&lt;a class="anchor-link" href="#Series"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;If you drop the original index, 
 you still have a Series. 
 However, 
 if you reset index of a sereis without dropping the original index, 
 you get a data frame.&lt;/li&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 31 Jul 2020 09:39:02 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-07-31:/blog/python-pandas-reset_index/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>pandas</category><category>Index</category><category>DataFrame</category><category>reset_index</category></item><item><title>Change the Index of a pandas DataFrame</title><link>https://misc.legendu.net/blog/python-pandas-set_index/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Assign-Index"&gt;Assign Index&lt;a class="anchor-link" href="#Assign-Index"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 31 Jul 2020 09:39:02 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-07-31:/blog/python-pandas-set_index/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>pandas</category><category>Index</category><category>DataFrame</category><category>set_index</category></item><item><title>Rename and Drop Columns in Spark DataFrames</title><link>https://misc.legendu.net/blog/spark-rename-columns/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comment"&gt;Comment&lt;a class="anchor-link" href="#Comment"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;You can use &lt;code&gt;withColumnRenamed&lt;/code&gt; to rename a column in a DataFrame.
You can also do renaming using &lt;code&gt;alias&lt;/code&gt; when select columns.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 19 Jul 2020 14:24:40 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-07-19:/blog/spark-rename-columns/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>DataFrame</category><category>rename</category><category>column</category><category>drop</category></item><item><title>Sort Python Imports Using isort</title><link>https://misc.legendu.net/blog/sort-python-imports-using-isort/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Installation"&gt;Installation&lt;a class="anchor-link" href="#Installation"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;isort&lt;/code&gt; can be installed with the following command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip3 install isort&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Configuration"&gt;Configuration&lt;a class="anchor-link" href="#Configuration"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;There are 2 recommened ways to configure &lt;code&gt;isort&lt;/code&gt;.
The first recommended way is to place a file named &lt;code&gt;.isort.cfg&lt;/code&gt; 
at the root of your project.
For example,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[settings]
line_length=120
force_to_top=file1.py,file2.py
skip=file3.py,file4.py
known_future_library=future,pies
known_standard_library=std,std2
known_third_party=randomthirdparty
known_first_party=mylib1,mylib2
indent='    '
multi_line_output=3
length_sort=1
forced_separate=django.contrib,django.utils
default_section=FIRSTPARTY
no_lines_before=LOCALFOLDER

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The second way is to add your desired settings under a [tool.isort] section in the &lt;code&gt;pyproject.toml&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 16 May 2020 12:09:15 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-05-16:/blog/sort-python-imports-using-isort/</guid><category>Computer Science</category><category>Computer Science</category><category>isort</category><category>Python</category><category>imports</category><category>linter</category><category>VS Code</category><category>Visual Studio Code</category></item><item><title>Python Logging Made Stupidly Simple With Loguru</title><link>https://misc.legendu.net/blog/python-logging-made-stupidly-simple-with-loguru/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;The best logging package for Python!&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Note that the default logging level is &lt;code&gt;DEBUG&lt;/code&gt; in loguru
and it is not allowed to change the logging level of an created logger object in loguru.
You can refer to
&lt;a href="https://loguru.readthedocs.io/en/latest/resources/recipes.html#changing-the-level-of-an-existing-handler"&gt;changing-the-level-of-an-existing-handler&lt;/a&gt;
and
&lt;a href="https://github.com/Delgan/loguru/issues/51"&gt;Change level of default handler&lt;/a&gt;
on ways to changing logging level in loguru.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Remove the default logger (with logging level equals DEBUG) and add a new one with the desired logging level.&lt;/li&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 14 Jul 2020 22:42:11 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-07-14:/blog/python-logging-made-stupidly-simple-with-loguru/</guid><category>Computer Science</category><category>Computer Science</category><category>Python</category><category>loguru</category><category>logging</category></item><item><title>Sort DataFrame in Spark</title><link>https://misc.legendu.net/blog/pyspark-dataframe-sort/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;After sorting,
 rows in a DataFrame are sorted according to partition ID.
 And within each partition, 
 rows are sorted.
 This property can be leverated to implement global ranking of rows.
 For more details,
 please refer to &lt;a href="https://medium.com/swlh/computing-global-rank-of-a-row-in-a-dataframe-with-spark-sql-34f6cc650ae5"&gt;Computing global rank of a row in a DataFrame with Spark SQL&lt;/a&gt;.
 However,
 notice that multi-layer ranking is often more efficiency 
 than a global ranking in big data applications.&lt;/li&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 04 Jul 2020 11:20:59 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-07-04:/blog/pyspark-dataframe-sort/</guid><category>Computer Science</category><category>programming</category><category>Spark</category><category>DataFrame</category><category>sort</category><category>orderBy</category></item><item><title>New Features in Spark 3</title><link>https://misc.legendu.net/blog/new-features-in-spark-3/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="AQE-(Adaptive-Query-Execution)"&gt;&lt;a href="https://databricks.com/blog/2020/05/29/adaptive-query-execution-speeding-up-spark-sql-at-runtime.html"&gt;AQE (Adaptive Query Execution)&lt;/a&gt;&lt;a class="anchor-link" href="#AQE-(Adaptive-Query-Execution)"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;To enable AQE,
you have to set &lt;code&gt;spark.sql.adaptive.enabled&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;
(using &lt;code&gt;--conf spark.sql.adaptive.enabled=true&lt;/code&gt; in spark-submit 
or using `spark.config("spark.sql.adaptive,enabled", "true") in Spark/PySpark code.)&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Pandas-UDFs"&gt;Pandas UDFs&lt;a class="anchor-link" href="#Pandas-UDFs"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Pandas UDFs are user defined functions 
that are executed by Spark using Arrow 
to transfer data to Pandas to work with the data, 
which allows vectorized operations. 
A Pandas UDF is defined using &lt;code&gt;pandas_udf&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 27 Jun 2020 12:57:10 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-27:/blog/new-features-in-spark-3/</guid><category>Computer Science</category><category>Computer Science</category><category>big data</category><category>Spark</category><category>PySpark</category><category>Python</category><category>pandas</category><category>DataFrame</category><category>AQE</category><category>Spark 3</category></item><item><title>Query Pandas Data Frames Using SQL</title><link>https://misc.legendu.net/blog/query-pandas-data-frames-using-sql/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="framequery"&gt;&lt;a href="https://github.com/chmp/framequery"&gt;framequery&lt;/a&gt;&lt;a class="anchor-link" href="#framequery"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 27 Jun 2020 12:26:43 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-27:/blog/query-pandas-data-frames-using-sql/</guid><category>Computer Science</category><category>Computer Science</category><category>pandas</category><category>DataFrame</category><category>dask</category><category>SQL</category><category>query</category><category>database</category><category>framequery</category><category>pandasql</category><category>ibis</category></item><item><title>Use pyarrow to Share Data in Memory in Python</title><link>https://misc.legendu.net/blog/python-pyarrow/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="References"&gt;References&lt;a class="anchor-link" href="#References"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/apache/arrow"&gt;https://github.com/apache/arrow&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/54582073/sharing-objects-across-workers-using-pyarrow"&gt;https://stackoverflow.com/questions/54582073/sharing-objects-across-workers-using-pyarrow&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/pytorch/pytorch/issues/13039"&gt;https://github.com/pytorch/pytorch/issues/13039&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://issues.apache.org/jira/browse/ARROW-5130"&gt;https://issues.apache.org/jira/browse/ARROW-5130&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://uwekorn.com/2019/09/15/how-we-build-apache-arrows-manylinux-wheels.html"&gt;https://uwekorn.com/2019/09/15/how-we-build-apache-arrows-manylinux-wheels.html&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 24 Jun 2020 15:54:46 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-24:/blog/python-pyarrow/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>memory</category><category>share</category><category>data</category><category>pyarrow</category><category>Arrow</category></item><item><title>Environment Variables in Shell</title><link>https://misc.legendu.net/blog/environment-variables-in-shell/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="export"&gt;export&lt;a class="anchor-link" href="#export"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;A new child process forked from a parent process does not inherit parent's variables by default.
The export command marks an environment variable to be exported with any newly forked child processes 
and thus it allows a child process to inherit all marked variables.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="unset"&gt;unset&lt;a class="anchor-link" href="#unset"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="References"&gt;References&lt;a class="anchor-link" href="#References"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/6877727/how-do-i-delete-an-exported-environment-variable"&gt;https://stackoverflow.com/questions/6877727/how-do-i-delete-an-exported-environment-variable&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 24 Jun 2020 13:31:52 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-24:/blog/environment-variables-in-shell/</guid><category>Computer Science</category><category>Computer Science</category><category>shell</category><category>bash</category><category>environment variable</category><category>export</category><category>unset</category></item><item><title>Bash Programming</title><link>https://misc.legendu.net/blog/bash-programming/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Parse-Arguments-in-Bash"&gt;&lt;a href="http://www.legendu.net/misc/blog/parse-arguments-in-bash/"&gt;Parse Arguments in Bash&lt;/a&gt;&lt;a class="anchor-link" href="#Parse-Arguments-in-Bash"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Environment-Variables"&gt;Environment Variables&lt;a class="anchor-link" href="#Environment-Variables"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;export&lt;/p&gt;
&lt;p&gt;unset&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.explainshell.com/"&gt;explainshell.com&lt;/a&gt; 
 is a great place for learning shell.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/Bash-it/bash-it"&gt;Bash-it/bash-it&lt;/a&gt;
 is a great community driven Bash framework.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is suggested that you avoid writing complicated Bash scripts. 
 &lt;a href="https://ipython.readthedocs.io/en/stable/"&gt;IPython&lt;/a&gt;
 is a much better alternative.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do NOT use &lt;code&gt;;&lt;/code&gt; to delimit paths passed to a shell command because &lt;code&gt;;&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 23 Jun 2020 00:21:31 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-23:/blog/bash-programming/</guid><category>Computer Science</category><category>Computer Science</category><category>bash</category><category>programming</category><category>shell</category></item><item><title>Use a Class in the Definition of the Class in Python</title><link>https://misc.legendu.net/blog/use-a-class-in-the-definition-of-the-class-in-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;As long as the class name is not need at definition time of the class, 
 it is OK to use it.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;You cannot use a class in default values of the &lt;code&gt;__init__&lt;/code&gt; function of the class.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 21 Jun 2020 23:16:20 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-21:/blog/use-a-class-in-the-definition-of-the-class-in-python/</guid><category>Computer Science</category><category>Computer Science</category><category>Python</category><category>class</category><category>OOP</category><category>object oriented programming</category><category>type annotation</category></item><item><title>Check Whether a Python Object Is Callable</title><link>https://misc.legendu.net/blog/check-whether-a-python-object-is-callable/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 20 Jun 2020 12:38:55 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-20:/blog/check-whether-a-python-object-is-callable/</guid><category>Computer Science</category><category>Computer Science</category><category>Python</category><category>callable</category><category>function</category><category>object</category></item><item><title>Broadcast Join in Spark</title><link>https://misc.legendu.net/blog/pyspark-broadcast-join/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;BroadcastHashJoin, i.e., map-side join is fast. 
 Use BroadcastHashJoin if possible. 
 Notice that Spark will automatically use BroacastHashJoin 
 if a table in inner join has a size less then the configured BroadcastHashJoin limit.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Notice that BroadcastJoin only works for inner joins. 
 If you have a outer join,
 BroadcastJoin won't happend even if you explicitly Broadcast a DataFrame.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 18 Jun 2020 08:43:44 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-18:/blog/pyspark-broadcast-join/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>HPC</category><category>high performance computing</category><category>PySpark</category><category>DataFrame</category><category>broadcast</category><category>join</category></item><item><title>Conversion Between PySpark DataFrames and pandas DataFrames</title><link>https://misc.legendu.net/blog/pyspark-pandas-dataframe-conversion/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;A PySpark DataFrame can be converted to a pandas DataFrame by calling the method &lt;code&gt;DataFrame.toPandas&lt;/code&gt;,
 and a pandas DataFrame can be converted to a PySpark DataFrame by calling &lt;code&gt;SparkSession.createDataFrame&lt;/code&gt;.
 Notice that when you call &lt;code&gt;DataFrame.toPandas&lt;/code&gt; 
 to convert a Spark DataFrame to a pandas DataFrame, 
 the whole Spark DataFrame is collected to the driver machine!
 This means that you should only call the method &lt;code&gt;DataFrame.toPandas&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 18 Jun 2020 08:43:44 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-18:/blog/pyspark-pandas-dataframe-conversion/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>HPC</category><category>high performance computing</category><category>PySpark</category><category>DataFrame</category><category>construct</category></item><item><title>Null Values in Inner Join of Spark Dataframes</title><link>https://misc.legendu.net/blog/null-values-in-inner-join-of-spark-dataframes/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 17 Jun 2020 00:25:21 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-17:/blog/null-values-in-inner-join-of-spark-dataframes/</guid><category>Computer Science</category><category>Computer Science</category><category>join</category><category>inner join</category><category>Spark</category><category>big data</category><category>DataFrame</category><category>null</category></item><item><title>Empty DataFrames in Spark</title><link>https://misc.legendu.net/blog/spark-dataframe-empty/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 17 Jun 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-17:/blog/spark-dataframe-empty/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>DataFrame</category><category>empty</category></item><item><title>The filter Function in Spark DataFrame</title><link>https://misc.legendu.net/blog/spark-dataframe-filter/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://spark.apache.org/docs/latest/sql-programming-guide.html"&gt;https://spark.apache.org/docs/latest/sql-programming-guide.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.sql.functions$"&gt;https://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.sql.functions$&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 17 Jun 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-17:/blog/spark-dataframe-filter/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>DataFrame</category><category>filter</category></item><item><title>Read Multiple Files into a DataFrame in Spark</title><link>https://misc.legendu.net/blog/spark-dataframe-read-multiple-files/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://hadoop.apache.org/docs/r2.7.2/api/org/apache/hadoop/fs/FileSystem.html#globStatus(org.apache.hadoop.fs.Path"&gt;https://hadoop.apache.org/docs/r2.7.2/api/org/apache/hadoop/fs/FileSystem.html#globStatus(org.apache.hadoop.fs.Path&lt;/a&gt;)&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 17 Jun 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-17:/blog/spark-dataframe-read-multiple-files/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>DataFrame</category><category>read</category><category>multiple</category><category>file</category></item><item><title>The select Function in Spark DataFrame</title><link>https://misc.legendu.net/blog/spark-dataframe-select/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://spark.apache.org/docs/latest/sql-programming-guide.html"&gt;https://spark.apache.org/docs/latest/sql-programming-guide.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.sql.functions$"&gt;https://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.sql.functions$&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 17 Jun 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-17:/blog/spark-dataframe-select/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>DataFrame</category><category>select</category></item><item><title>Construct Simple Spark DataFrames Using Seq</title><link>https://misc.legendu.net/blog/spark-seq-dataframe/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://medium.com/@mrpowers/manually-creating-spark-dataframes-b14dae906393"&gt;https://medium.com/@mrpowers/manually-creating-spark-dataframes-b14dae906393&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Seq.toDF"&gt;Seq.toDF&lt;a class="anchor-link" href="#Seq.toDF"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;toDF() provides a concise syntax for creating DataFrames and can be accessed after importing Spark implicits.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;

&lt;pre&gt;&lt;code&gt;import spark.implicits._&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="SparkSession.createDataFrame"&gt;SparkSession.createDataFrame&lt;a class="anchor-link" href="#SparkSession.createDataFrame"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 17 Jun 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-17:/blog/spark-seq-dataframe/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>DataFrame</category><category>Seq</category><category>Construct</category></item><item><title>Parse Arguments in Bash</title><link>https://misc.legendu.net/blog/parse-arguments-in-bash/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 16 Jun 2020 15:24:04 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-16:/blog/parse-arguments-in-bash/</guid><category>Computer Science</category><category>Computer Science</category><category>shell</category><category>bash</category><category>parse</category><category>argument</category><category>parameter</category></item><item><title>Reshape a pandas DataFrame</title><link>https://misc.legendu.net/blog/python-pandas-reshape/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h1 id="Reshape-DataFrame"&gt;Reshape DataFrame&lt;a class="anchor-link" href="#Reshape-DataFrame"&gt;&amp;#182;&lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 15 Jun 2020 11:41:45 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-15:/blog/python-pandas-reshape/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>pandas</category><category>DataFrame</category><category>reshape</category><category>repeat</category></item><item><title>Dunder/Magic Methods in Python</title><link>https://misc.legendu.net/blog/dunder-magic-methods-in-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="__call__-(Object-Invocation)"&gt;&lt;code&gt;__call__&lt;/code&gt; (Object Invocation)&lt;a class="anchor-link" href="#__call__-(Object-Invocation)"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;We can make any object callable like a regular function by adding the &lt;strong&gt;call&lt;/strong&gt; dunder method. 
Let’s consider the below toy(not very meaningful) example just to showcase the &lt;strong&gt;call&lt;/strong&gt; method.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 13 Jun 2020 10:04:54 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-06-13:/blog/dunder-magic-methods-in-python/</guid><category>Computer Science</category><category>Computer Science</category></item><item><title>Read/Write CSV in Spark</title><link>https://misc.legendu.net/blog/spark-io-csv/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 25 May 2020 00:10:02 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-05-25:/blog/spark-io-csv/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>CSV</category><category>text</category></item><item><title>Tips on Google Spreadsheet</title><link>https://misc.legendu.net/blog/tips-on-google-spreadsheet/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 23 Apr 2020 22:42:29 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-23:/blog/tips-on-google-spreadsheet/</guid><category>Computer Science</category><category>Computer Science</category><category>Google</category><category>spreadsheet</category><category>pivot table</category><category>pivot</category></item><item><title>Read/Write CSV in PySpark</title><link>https://misc.legendu.net/blog/pyspark-io-csv/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h1 id="Load-Data-in-CSV-Format"&gt;Load Data in CSV Format&lt;a class="anchor-link" href="#Load-Data-in-CSV-Format"&gt;&amp;#182;&lt;/a&gt;&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;.load&lt;/code&gt; is a general method for reading data in different format. 
 You have to specify the format of the data via the method &lt;code&gt;.format&lt;/code&gt; of course.
 &lt;code&gt;.csv&lt;/code&gt; (both for CSV and TSV), &lt;code&gt;.json&lt;/code&gt; and &lt;code&gt;.parquet&lt;/code&gt; are specializations of &lt;code&gt;.load&lt;/code&gt;. 
 &lt;code&gt;.format&lt;/code&gt; is optional if you use a specific loading function (csv, json, etc.).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 22 May 2020 12:10:31 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-05-22:/blog/pyspark-io-csv/</guid><category>Computer Science</category><category>programming</category><category>PySpark</category><category>CSV</category><category>text</category><category>IO</category></item><item><title>Using Temporary Columns in Spark</title><link>https://misc.legendu.net/blog/spark-dataframe-temp-column/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 21 May 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-05-21:/blog/spark-dataframe-temp-column/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>DataFrame</category><category>PySpark</category><category>temporary</category><category>column</category></item><item><title>Tips on Dataset in PyTorch</title><link>https://misc.legendu.net/blog/python-pytorch-dataset/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;If your data can be fit into the CPU memory,
 it is a good practice to save your data into one pickle file
 (or other format that you know how to deserialize).
 This comes with several advantages.
 First, it is easier and faster to read from a single big file rather than many small files. 
 Second, it avoids the possible system error of openning too many files
 (even though avoiding lazying data loading is another way to fix the issue).
 Some example datasets (e.g., MNIST)
 have separate training and testing files (i.e., 2 pickle files), 
 so that research work based on it can be easily reproduced.
 I personally suggest that you keep only 1 file containing all data
 when implementing your own Dataset class.
 You can always use the function &lt;code&gt;torch.utils.data.random_split&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 18 May 2020 08:12:02 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-05-18:/blog/python-pytorch-dataset/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>AI</category><category>data science</category><category>machine learning</category><category>deep learning</category><category>PyTorch</category><category>Dataset</category></item><item><title>Hands on the Python submodule os.path</title><link>https://misc.legendu.net/blog/hands-on-the-python-submodel-os.path/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;It is suggested that you use use &lt;code&gt;pathlib&lt;/code&gt; package instead of &lt;code&gt;os.path&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 10 May 2020 10:04:08 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-05-10:/blog/hands-on-the-python-submodel-os.path/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>os.path</category><category>file system</category></item><item><title>Hands on the Python module glob</title><link>https://misc.legendu.net/blog/hands-on-the-python-model-glob/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comment"&gt;Comment&lt;a class="anchor-link" href="#Comment"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://www.legendu.net/misc/blog/hands-on-pathlib.path/#Path.glob"&gt;pathlib.Path.glob&lt;/a&gt; is preferred to the &lt;code&gt;glob&lt;/code&gt; module!!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The list returned is not sorted.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 10 May 2020 10:00:59 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-05-10:/blog/hands-on-the-python-model-glob/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>glob</category><category>file system</category></item><item><title>GPU Computing in Python</title><link>https://misc.legendu.net/blog/gpu-computing-in-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="General-Purpose-GPU-Computing"&gt;General Purpose GPU Computing&lt;a class="anchor-link" href="#General-Purpose-GPU-Computing"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;h3 id="pyculib"&gt;&lt;a href="https://github.com/numba/pyculib"&gt;pyculib&lt;/a&gt;&lt;a class="anchor-link" href="#pyculib"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;&lt;h3 id="PyCUDA"&gt;&lt;a href="https://github.com/inducer/pycuda"&gt;PyCUDA&lt;/a&gt;&lt;a class="anchor-link" href="#PyCUDA"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;CUDA integration for Python, plus shiny features.

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="cupy"&gt;&lt;a href="https://github.com/cupy/cupy"&gt;cupy&lt;/a&gt;&lt;a class="anchor-link" href="#cupy"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;NumPy-like API accelerated with CUDA.

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="cudf"&gt;&lt;a href="https://github.com/rapidsai/cudf"&gt;cudf&lt;/a&gt;&lt;a class="anchor-link" href="#cudf"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cuDF - GPU DataFrame Library.

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="jax"&gt;&lt;a href="https://github.com/google/jax"&gt;jax&lt;/a&gt;&lt;a class="anchor-link" href="#jax"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;&lt;h3 id="cuml"&gt;&lt;a href="https://github.com/rapidsai/cuml"&gt;cuml&lt;/a&gt;&lt;a class="anchor-link" href="#cuml"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Graphics-Rendering"&gt;Graphics Rendering&lt;a class="anchor-link" href="#Graphics-Rendering"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/mcfletch/pyopengl"&gt;PyOpenGL&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Machine-Learning-Libraries"&gt;Machine Learning Libraries&lt;a class="anchor-link" href="#Machine-Learning-Libraries"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Most machine learning libraries in Python support GPU computing. 
I list the most famous ones below.&lt;/p&gt;
&lt;h3 id="LightGBM"&gt;LightGBM&lt;a class="anchor-link" href="#LightGBM"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;&lt;h3 id="AutoGluon"&gt;AutoGluon&lt;a class="anchor-link" href="#AutoGluon"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;&lt;h3 id="PyTorch"&gt;PyTorch&lt;a class="anchor-link" href="#PyTorch"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;&lt;h3 id="TensorFlow"&gt;TensorFlow&lt;a class="anchor-link" href="#TensorFlow"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;&lt;h3 id="Apache-Ray"&gt;Apache Ray&lt;a class="anchor-link" href="#Apache-Ray"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;&lt;h3 id="Horovod"&gt;Horovod&lt;a class="anchor-link" href="#Horovod"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;&lt;h3 id="ZeRO-+-DeepSpeed"&gt;ZeRO + DeepSpeed&lt;a class="anchor-link" href="#ZeRO-+-DeepSpeed"&gt;&amp;#182;&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 09 Apr 2020 13:17:05 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-09:/blog/gpu-computing-in-python/</guid><category>Computer Science</category><category>Computer Science</category><category>GPU</category><category>Python</category></item><item><title>Hands on the Python module numba</title><link>https://misc.legendu.net/blog/python-numba/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Installation"&gt;&lt;a href="http://numba.pydata.org/numba-doc/0.41.0/user/installing.html"&gt;Installation&lt;/a&gt;&lt;a class="anchor-link" href="#Installation"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;numba&lt;/code&gt; can be installed using the following command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:::bash
pip3 install numba

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you need CUDA support, 
you have to install CUDA drivers.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:::bash
sudo apt-get install cuda-10-1

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Instead of going through the hassle of configuring numba for GPU,
a better way is to run numba in a Nvidia Docker container. 
The Docker image &lt;a href="https://hub.docker.com/layers/nvidia/cuda"&gt;nvidia/cuda:10.1-cudnn7-runtime-ubuntu18.04&lt;/a&gt; has CUDA runtime installed,
so it is as easy as installing numba on top it 
and you are ready to go.
For more detailed instructions,
please refer to &lt;a href="http://numba.pydata.org/numba-doc/0.41.0/user/installing.html"&gt;&lt;/a&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 09 May 2020 10:52:30 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-05-09:/blog/python-numba/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>numba</category><category>JIT</category><category>HPC</category><category>high performance computing</category></item><item><title>Reduce Memory Needed to Train Deep Learning Models</title><link>https://misc.legendu.net/blog/reduce-memory-needed-to-train-deep-learning-models/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="checkmate"&gt;&lt;a href="https://github.com/parasj/checkmate"&gt;checkmate&lt;/a&gt;&lt;a class="anchor-link" href="#checkmate"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/parasj/checkmate"&gt;checkmate&lt;/a&gt;
breaks the GPU memory wall by enabling researchers 
to train large state-of-the-art models that do not fit in GPU memory. 
Checkmate applies optimal tensor rematerialization 
(as detailed in the &lt;a href="https://arxiv.org/abs/1910.02653"&gt;paper&lt;/a&gt;) to trade off space and time.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 03 May 2020 21:33:30 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-05-03:/blog/reduce-memory-needed-to-train-deep-learning-models/</guid><category>Computer Science</category><category>Computer Science</category><category>deep learning</category><category>AI</category><category>machine learning</category><category>data science</category><category>checkmate</category><category>memory</category></item><item><title>Pivot Table in SQL</title><link>https://misc.legendu.net/blog/pivot-table-in-sql/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 26 Apr 2020 15:26:49 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-26:/blog/pivot-table-in-sql/</guid><category>Computer Science</category><category>Computer Science</category><category>pivot</category><category>SQL</category><category>pivot table</category></item><item><title>Broadcast Arrays in Numpy</title><link>https://misc.legendu.net/blog/broadcast-arrays-in-numpy/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The broadcast concept in numpy
 is essentially a way to "virtually" duplicate data in a numpy array 
 so that it is "virtually" reshaped to be compatible with another numpy array for a certain operation.
 Do not confused yourself about it with the broadcast concept in Spark
 which sends a full copy of a (small) DataFrame to each work node for &lt;code&gt;BroadCastJoin&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 24 Apr 2020 23:07:30 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-24:/blog/broadcast-arrays-in-numpy/</guid><category>Computer Science</category><category>Computer Science</category><category>numpy</category><category>Python</category><category>broadcast</category><category>array</category><category>expand dimension</category><category>reshape</category></item><item><title>Move a Tensor to a Specific Device in PyTorch</title><link>https://misc.legendu.net/blog/python-pytorch-tensor-device/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 21 Apr 2020 11:51:30 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-21:/blog/python-pytorch-tensor-device/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>AI</category><category>data science</category><category>machine learning</category><category>deep learning</category><category>PyTorch</category><category>tensor</category><category>device</category></item><item><title>Kotlin Kernel for JupyterLab</title><link>https://misc.legendu.net/blog/Kotlin-kernel-for-jupyterlab/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;There are multiple Kotlin kernels for JupyterLab. 
It is is suggested that you use official one released by JetBrains.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Jar-Dependencies"&gt;Jar Dependencies&lt;a class="anchor-link" href="#Jar-Dependencies"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;You can add a JAR dependency using the following code.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 20 Apr 2020 13:15:09 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-20:/blog/Kotlin-kernel-for-jupyterlab/</guid><category>Computer Science</category><category>Computer Science</category><category>Kotlin</category><category>Jupyter</category><category>JupyterLab</category><category>kernel</category><category>dependency</category><category>JetBrains</category></item><item><title>Adaptive Pooling in PyTorch</title><link>https://misc.legendu.net/blog/adaptive-pooling-in-pytorch/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Adpative pooling an generate fixed-sized output,
 which enables a model to handle varying sized input. 
 The models in torchvision are such examples.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="AdaptiveMaxPool2d"&gt;&lt;a href="https://pytorch.org/docs/stable/nn.html#torch.nn.AdaptiveMaxPool2d"&gt;AdaptiveMaxPool2d&lt;/a&gt;&lt;a class="anchor-link" href="#AdaptiveMaxPool2d"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="References"&gt;References&lt;a class="anchor-link" href="#References"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://discuss.pytorch.org/t/torchvision-resnet-input-size/9405/3"&gt;Torchvision ResNet Input Size&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 20 Apr 2020 08:58:10 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-20:/blog/adaptive-pooling-in-pytorch/</guid><category>Computer Science</category><category>Computer Science</category><category>data science</category><category>machine learning</category><category>AI</category><category>deep learning</category><category>PyTorch</category><category>pooling</category><category>adaptive</category></item><item><title>Ways to Enable and Disable Gradient in PyTorch</title><link>https://misc.legendu.net/blog/ways-to-enable-and-disable-gradient-in-pytorch/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="set_grad_enable"&gt;set_grad_enable&lt;a class="anchor-link" href="#set_grad_enable"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 20 Apr 2020 08:44:18 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-20:/blog/ways-to-enable-and-disable-gradient-in-pytorch/</guid><category>Computer Science</category><category>Computer Science</category><category>AI</category><category>deep learning</category><category>data science</category><category>machine learning</category><category>PyTorch</category><category>gradient</category></item><item><title>Multiprocessing Issues in Docker</title><link>https://misc.legendu.net/blog/multiprocessing-issues-in-docker/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="PyTorch-Specific"&gt;PyTorch Specific&lt;a class="anchor-link" href="#PyTorch-Specific"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Using &lt;code&gt;num_workers &amp;gt; 0&lt;/code&gt; for a DataLoader in Docker might causes issues ...&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pytorch.org/docs/stable/notes/multiprocessing.html#multiprocessing-best-practices"&gt;MULTIPROCESSING BEST PRACTICES&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/pytorch/pytorch/issues/5301"&gt;Runtime Error with DataLoader: exited unexpectedly #5301&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://forums.fast.ai/t/runtimeerror-dataloader-worker-pid-137-is-killed-by-signal-bus-error/27095"&gt;https://forums.fast.ai/t/runtimeerror-dataloader-worker-pid-137-is-killed-by-signal-bus-error/27095&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/pytorch/pytorch/issues/2244"&gt;https://github.com/pytorch/pytorch/issues/2244&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 20 Apr 2020 08:30:49 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-20:/blog/multiprocessing-issues-in-docker/</guid><category>Computer Science</category><category>Computer Science</category><category>Docker</category><category>issue</category><category>multiprocessing</category><category>PyTorch</category></item><item><title>Get the Number of Cores in macOS</title><link>https://misc.legendu.net/blog/get-the-number-of-cores-in-macos/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Using-Shell-Command"&gt;Using Shell Command&lt;a class="anchor-link" href="#Using-Shell-Command"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 16 Apr 2020 14:41:04 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-16:/blog/get-the-number-of-cores-in-macos/</guid><category>Computer Science</category><category>Computer Science</category><category>number of cores</category><category>macOS</category></item><item><title>Delete a Layer in a Pretrained Model in PyTorch</title><link>https://misc.legendu.net/blog/delete-a-layer-in-a-pretrained-model-in-pytorch/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;It is common to customize a pretrained model 
by delete the output layer or replace it to the output layer that suits your use case.
There are several ways to achieve this in PyTorch.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Replace-the-Fully-Connected-Layer-with-an-Identity-Layer"&gt;Replace the Fully Connected Layer with an Identity Layer&lt;a class="anchor-link" href="#Replace-the-Fully-Connected-Layer-with-an-Identity-Layer"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Define an identity layer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Replace the fully connected layer with an Identity Layer (using ResNet18 as an example).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 16 Apr 2020 09:48:27 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-16:/blog/delete-a-layer-in-a-pretrained-model-in-pytorch/</guid><category>Computer Science</category><category>Computer Science</category><category>data science</category><category>deep learning</category><category>machine learning</category><category>PyTorch</category><category>layer</category><category>output</category><category>pretrained</category><category>delete</category></item><item><title>Add Columns into a pandas DataFrame</title><link>https://misc.legendu.net/blog/python-pandas-add-column/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comment"&gt;Comment&lt;a class="anchor-link" href="#Comment"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;When a Series is added as a new column into a DataFrame, 
values are added by matching index.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 13 Apr 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-13:/blog/python-pandas-add-column/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>pandas</category><category>DataFrame</category><category>add</category><category>insert</category><category>column</category></item><item><title>Drop Rows or Columns from a pandas DataFrame</title><link>https://misc.legendu.net/blog/python-pandas-drop/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Drop-Rows"&gt;Drop Rows&lt;a class="anchor-link" href="#Drop-Rows"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 13 Apr 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-13:/blog/python-pandas-drop/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>pandas</category><category>DataFrame</category><category>reshape</category><category>drop</category></item><item><title>Manipulate pandas DataFrame</title><link>https://misc.legendu.net/blog/python-pandas-manipulate/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h1 id="Reshape-DataFrame"&gt;Reshape DataFrame&lt;a class="anchor-link" href="#Reshape-DataFrame"&gt;&amp;#182;&lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 13 Apr 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-13:/blog/python-pandas-manipulate/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>pandas</category><category>DataFrame</category><category>manipulate</category></item><item><title>Replace Values in a pandas DataFrame</title><link>https://misc.legendu.net/blog/python-pandas-replace/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;DataFrame.replace&lt;/code&gt; works different from &lt;code&gt;DataFrame.update&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 13 Apr 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-13:/blog/python-pandas-replace/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>pandas</category><category>DataFrame</category><category>replace</category></item><item><title>Sort a pandas DataFrame</title><link>https://misc.legendu.net/blog/python-pandas-sort/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 13 Apr 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-13:/blog/python-pandas-sort/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>pandas</category><category>DataFrame</category><category>replace</category></item><item><title>Resize a Tensor in PyTorch</title><link>https://misc.legendu.net/blog/python-pytorch-tensor-resize/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 12 Apr 2020 12:13:48 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-12:/blog/python-pytorch-tensor-resize/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>AI</category><category>data science</category><category>machine learning</category><category>deep learning</category><category>PyTorch</category><category>tensor</category><category>resize</category><category>clone</category><category>replicate</category><category>view</category></item><item><title>Iterator in Rust</title><link>https://misc.legendu.net/blog/rust-collection-iterator/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 08 Apr 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-08:/blog/rust-collection-iterator/</guid><category>Computer Science</category><category>programming</category><category>Rust</category><category>collection</category><category>iterator</category><category>IntoIterator</category></item><item><title>Range in Rust</title><link>https://misc.legendu.net/blog/rust-collection-range/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 08 Apr 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-08:/blog/rust-collection-range/</guid><category>Computer Science</category><category>programming</category><category>Rust</category><category>collection</category><category>Range</category></item><item><title>Tuple in Rust</title><link>https://misc.legendu.net/blog/rust-collection-tuple/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 08 Apr 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-08:/blog/rust-collection-tuple/</guid><category>Computer Science</category><category>programming</category><category>Rust</category><category>collection</category><category>Tuple</category></item><item><title>Date and Time in Rust</title><link>https://misc.legendu.net/blog/rust-date-time/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 08 Apr 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-08:/blog/rust-date-time/</guid><category>Computer Science</category><category>programming</category><category>Rust</category><category>date</category><category>time</category><category>chrono</category><category>DateTime</category><category>SystemTime</category><category>format</category><category>string</category><category>quanta</category></item><item><title>Loop in Rust</title><link>https://misc.legendu.net/blog/rust-loop/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 08 Apr 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-08:/blog/rust-loop/</guid><category>Computer Science</category><category>programming</category><category>Rust</category><category>loop</category><category>for</category><category>while</category></item><item><title>Map in Rust</title><link>https://misc.legendu.net/blog/rust-map/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 08 Apr 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-04-08:/blog/rust-map/</guid><category>Computer Science</category><category>programming</category><category>Rust</category><category>collection</category><category>HashMap</category><category>dictionary</category><category>HashTable</category></item><item><title>Specify Dependencies in the Almond Scala Kernel in JupyterLab</title><link>https://misc.legendu.net/blog/scala-almond-dependencies/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Jar-Dependency"&gt;Jar Dependency&lt;a class="anchor-link" href="#Jar-Dependency"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The way to add Jar dependency in Almond is the same as in 
&lt;a href="http://ammonite.io/#Ammonite-REPL"&gt;Ammonite&lt;/a&gt;.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 25 Mar 2020 17:44:17 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-03-25:/blog/scala-almond-dependencies/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>JVM</category><category>Almond</category><category>JupyterLab</category><category>dependencies</category><category>Ammonite</category></item><item><title>Schdule Jobs in Python</title><link>https://misc.legendu.net/blog/python-schedule-job/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;If you schedule a job $J_1$ using &lt;code&gt;schedule&lt;/code&gt; in IPython shell, 
 and then interrupt the following loop that checks and runs pending jobs,&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
     &lt;span class="n"&gt;schedule&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run_pending&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
 the scheduled job $J_1$ is still there unless you stop the current IPython shell. 
 The effective consequence of this is that 
 if you schedule another job $J_2$, 
 and start to run it using the following loop, &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 23 Mar 2020 11:08:56 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-03-23:/blog/python-schedule-job/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>schedule</category><category>job</category></item><item><title>Use Spark with the Almond Scala Kernel in JupyterLab</title><link>https://misc.legendu.net/blog/spark-almond-jupyterlab/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;This notebook present a minimum example on how to use Spark
with the Almond Scala kernel in Jupyterlab.
Notice that Spark 2.4.2 is used since it is the only stable Spark version that supports Scala 2.12 as of now.
Please refer to 
&lt;a href="https://github.com/almond-sh/examples/blob/master/notebooks/spark.ipynb"&gt;almond-sh/examples&lt;/a&gt;
for more examples.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 22 Mar 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-03-22:/blog/spark-almond-jupyterlab/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>Almond</category><category>JupyterLab</category></item><item><title>Take Screenshots in Python</title><link>https://misc.legendu.net/blog/python-screenshot/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;PIL.ImageGrab works on macOS and Windows only.&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;PIL.ImageGrab&lt;/code&gt; is relatively slow. 
 &lt;code&gt;python-mss&lt;/code&gt; and &lt;code&gt;PyQt5&lt;/code&gt; are better alternatives if performance of screenshot is critical.
 Notice that saving an (e.g., PNG) image can take significant time (might take up to 0.5 seconds) too,
 this is often due to image compression is slow. 
 Lower the compression level can significant reduce the time needed to save an image.
 Please refer to 
 &lt;a href="https://github.com/python-pillow/Pillow/issues/1211"&gt;Saving a PNG file is slow&lt;/a&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 21 Mar 2020 11:53:06 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-03-21:/blog/python-screenshot/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>Pillow</category><category>computer vision</category><category>CV</category><category>image</category><category>screenshot</category><category>PIL</category></item><item><title>Count Frequencies of Elements Using collections.Counter in Python</title><link>https://misc.legendu.net/blog/python-counter/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips"&gt;Tips&lt;a class="anchor-link" href="#Tips"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;collections.Counter&lt;/code&gt; is similar to a &lt;code&gt;dict&lt;/code&gt; object.
You can iterate through it similarly to how you iterate through a &lt;code&gt;dict&lt;/code&gt;.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 13 Mar 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-03-13:/blog/python-counter/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>collection</category><category>Counter</category><category>frequency</category><category>dict</category></item><item><title>Sort Collections in Python</title><link>https://misc.legendu.net/blog/python-sort/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips"&gt;Tips&lt;a class="anchor-link" href="#Tips"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;You can use the built-in function &lt;code&gt;sorted&lt;/code&gt; to sort any iterable collection.
 It always a (new) list containing sorted data.
 Some mutable collections (e.g., list) have thee method &lt;code&gt;sort&lt;/code&gt; to sort elements in-place.
 Both &lt;code&gt;sorted&lt;/code&gt; and &lt;code&gt;Collection.sort&lt;/code&gt; accept an argument &lt;code&gt;key&lt;/code&gt; for specifying customized sorting criteria.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Sort-a-List"&gt;Sort a List&lt;a class="anchor-link" href="#Sort-a-List"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 13 Mar 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-03-13:/blog/python-sort/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>collection</category><category>sort</category></item><item><title>Convert a Tensor to a Numpy Array or List in PyTorch</title><link>https://misc.legendu.net/blog/python-pytorch-tensor-numpy-list/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips"&gt;Tips&lt;a class="anchor-link" href="#Tips"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;There are multiple ways to convert a Tensor to a numpy array in PyTorch.
First,
you can call the method &lt;code&gt;Tensor.numpy&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;my_tensor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Second,
you can use the function &lt;code&gt;numpy.array&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_tensor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is suggested that you use the function &lt;code&gt;numpy.array&lt;/code&gt; 
to convert a Tensor to a numpy array.
The reason is that &lt;code&gt;numpy.array&lt;/code&gt; is more generic. 
You can also use it to convert other objects (e.g., PIL.Image)
to numpy arrays
while those objects might not have a method named &lt;code&gt;numpy&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 11 Mar 2020 21:09:41 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-03-11:/blog/python-pytorch-tensor-numpy-list/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>AI</category><category>data science</category><category>machine learning</category><category>deep learning</category><category>PyTorch</category><category>tensor</category><category>numpy</category><category>array</category><category>list</category></item><item><title>Convert an Image to Differnt Modes Using Pillow in Python</title><link>https://misc.legendu.net/blog/python-pillow-image-convert/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 11 Mar 2020 21:00:59 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-03-11:/blog/python-pillow-image-convert/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>Pillow</category><category>computer vision</category><category>CV</category><category>image</category><category>PIL</category><category>black and white</category><category>grayscale</category><category>mode</category><category>RGBA</category><category>RGB</category></item><item><title>Get Information of Application Windows in Python</title><link>https://misc.legendu.net/blog/python-app-window-info/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips"&gt;Tips&lt;a class="anchor-link" href="#Tips"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;PyGetWindow does not support Linux currently.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Installation"&gt;Installation&lt;a class="anchor-link" href="#Installation"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;pip3 install pyobjc-framework-quartz pygetwindow&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 11 Mar 2020 20:54:01 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-03-11:/blog/python-app-window-info/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>PyGetWindow</category><category>Quartz</category><category>pyobjc</category><category>window</category><category>information</category><category>geometry</category><category>title</category></item><item><title>Hands on the datetime Module in Python</title><link>https://misc.legendu.net/blog/python-datetime/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comment"&gt;Comment&lt;a class="anchor-link" href="#Comment"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;A &lt;code&gt;Datetime&lt;/code&gt; object cannot be compared with a string directly.
However, 
pandas Series of datetime objects can be compared with string date directly 
(both by operators and methods).
The comparison is done by parsing the string to a datetime object. 
An exception will be thrown if the string cannot be parsed into a datetime object.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 11 Mar 2020 11:14:05 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-03-11:/blog/python-datetime/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>time</category><category>datetime</category><category>date</category><category>TimeDelta</category></item><item><title>Handling Timezone Correctly in Python</title><link>https://misc.legendu.net/blog/python-datetime-timezone/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 11 Mar 2020 11:14:05 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-03-11:/blog/python-datetime-timezone/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>time</category><category>datetime</category><category>date</category><category>timezone</category></item><item><title>Date and Time in Python pandas</title><link>https://misc.legendu.net/blog/python-pandas-datetime/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Date/time utilities in the &lt;code&gt;pandas&lt;/code&gt; module are more flexible/powerful than that in the &lt;code&gt;datetime&lt;/code&gt; module.
It is suggested that you use date/time utilities in the &lt;code&gt;pandas&lt;/code&gt; module 
when you use DataFrame/Series in the &lt;code&gt;pandas&lt;/code&gt; module.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;pandas.to_datetime works on an iterable object, handles missing values and nano seconds.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;pandas.Series.dt.strftime&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 11 Mar 2020 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-03-11:/blog/python-pandas-datetime/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>pandas</category><category>date</category><category>time</category><category>datetime</category></item><item><title>Pad a Sequence in Python</title><link>https://misc.legendu.net/blog/python-pad-sequence/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 05 Mar 2020 11:45:08 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-03-05:/blog/python-pad-sequence/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>AI</category><category>data science</category><category>machine learning</category><category>deep learning</category><category>PyTorch</category><category>Keras</category><category>pad</category><category>sequence</category><category>numpy</category><category>array</category><category>TensorFlow</category></item><item><title>Tensor Transformations in TorchVision</title><link>https://misc.legendu.net/blog/python-pytorch-tensor-transformations/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Transformations in &lt;code&gt;torchvision.transforms&lt;/code&gt; work on images, tensors (representing images) 
 and possibly on numpy arrays (representing images).
 However,
 a transformation (e.g., &lt;code&gt;ToTensor&lt;/code&gt;) might work differently on different input types.
 So you'd be clear about what exactly a transformation function does. 
 A good practice is to always convert your non-tensor input data to tensors using the transformation &lt;code&gt;ToTensor&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 03 Mar 2020 11:45:08 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-03-03:/blog/python-pytorch-tensor-transformations/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>AI</category><category>data science</category><category>machine learning</category><category>deep learning</category><category>PyTorch</category><category>tensor</category><category>transformation</category><category>TorchVision</category></item><item><title>Hands on pandas.Series in Python</title><link>https://misc.legendu.net/blog/python-pandas-series/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="pandas.Series.str"&gt;&lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.str.html"&gt;pandas.Series.str&lt;/a&gt;&lt;a class="anchor-link" href="#pandas.Series.str"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The attribute &lt;code&gt;pandas.Series.str&lt;/code&gt; can only be used with Series of &lt;code&gt;str&lt;/code&gt; values.
 You will either encounter an &lt;code&gt;AttributionError&lt;/code&gt; 
 (Can only use .str accessor with string values, which use np.object_ dtype in pandas)
 or find it to yield a Series of &lt;code&gt;NaN&lt;/code&gt;'s if you invoke it on a Series of non-string values.
 If you have control of the DataFrame, 
 the preferred way is to cast the type the column to &lt;code&gt;str&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 28 Feb 2020 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-02-28:/blog/python-pandas-series/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>pandas</category><category>Series</category></item><item><title>Hands on the Python module random</title><link>https://misc.legendu.net/blog/python-random/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 27 Feb 2020 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-02-27:/blog/python-random/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>random</category><category>RNG</category></item><item><title>Split a Dataset into Train and Test Datasets in Python</title><link>https://misc.legendu.net/blog/python-ai-split-dataset/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Scikit-learn-Compatible-Packages"&gt;Scikit-learn Compatible Packages&lt;a class="anchor-link" href="#Scikit-learn-Compatible-Packages"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html"&gt;sklearn.model_selection.train_test_split&lt;/a&gt; 
is the best way to split a dataset into train and test subset 
for scikit-learn compatible packages (scikit-learn, XGBoost, LightGBM, etc.).
It supports splitting both iterable objects (numpy array, list, pandas Series) and pandas DataFrames. 
When splitting an iterable object,
it returns &lt;code&gt;(train, test)&lt;/code&gt; where &lt;code&gt;train&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; are lists.
When splitting a pandas DataFrame,
it returns &lt;code&gt;(train, test)&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 25 Feb 2020 22:40:06 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-02-25:/blog/python-ai-split-dataset/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>AI</category><category>data science</category><category>machine learning</category><category>Dataset</category></item><item><title>Performance Profiling of JVM Applications</title><link>https://misc.legendu.net/blog/kotlin-jvm-performace-profiling/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="System.nanoTime"&gt;System.nanoTime&lt;a class="anchor-link" href="#System.nanoTime"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The naive way is to profling your JVM application using &lt;code&gt;System.nanoTime&lt;/code&gt; 
(which gets the system time in nanosecond resolution).&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 10 Feb 2020 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-02-10:/blog/kotlin-jvm-performace-profiling/</guid><category>Computer Science</category><category>programming</category><category>Kotlin</category><category>JVM</category><category>performance</category><category>profile</category><category>Java</category><category>VisualVM</category><category>nanoTime</category><category>JMH</category></item><item><title>AutoML on Tabular Data Using AutoGluon</title><link>https://misc.legendu.net/blog/python-automl-autogluon/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 04 Feb 2020 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-02-04:/blog/python-automl-autogluon/</guid><category>Ai</category><category>Ai</category><category>Python</category><category>data science</category><category>machine learning</category><category>AutoML</category><category>AutoGluon</category></item><item><title>Group-by Plots in HoloViews</title><link>https://misc.legendu.net/blog/python-holoviews-group-by/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;There are many ways to achievie groupby in HolovViews.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Directly use the groupby method of HoloViews objects!!!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use the method HoloMap to create a dictionary of parameters to HoloViews objects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use the method dataset.to which has groupby option. However, it seems to me that this doesn't give me options to select which one to show. But with click and transparent parameters configured, you can achieve similar effect ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 03 Jan 2020 17:20:33 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2020-01-03:/blog/python-holoviews-group-by/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>visualization</category><category>HoloViews</category><category>groupby</category><category>group by</category></item><item><title>Java Native Access</title><link>https://misc.legendu.net/blog/java-native-access/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Java-Native-Interface"&gt;Java Native Interface&lt;a class="anchor-link" href="#Java-Native-Interface"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;You can call native code (typically C, C++ or Fortran) in Java using the Java Native Interface (JNI). 
 For the code implemented in native code, 
 you must use keyword "native" to tell the compiler that it is implemented outside Java. 
 Also, 
 you should surround the Java code which load the compile native code in &lt;code&gt;static{}&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 31 Dec 2019 11:08:56 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-31:/blog/java-native-access/</guid><category>Computer Science</category><category>programming</category><category>JVM</category><category>Java</category><category>JNA</category><category>Java Native Access</category></item><item><title>String vs Bytecode in Python</title><link>https://misc.legendu.net/blog/python-str-bytecode/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Be careful that some functions return bytecode instead of string in Python 3.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;bytecode&lt;/code&gt; has similar APIs to &lt;code&gt;str&lt;/code&gt;.
 Most string functions can be applied to bytecode as well.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="String-to-Bytecode"&gt;String to Bytecode&lt;a class="anchor-link" href="#String-to-Bytecode"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 28 Dec 2019 18:40:09 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-28:/blog/python-str-bytecode/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>string</category><category>str</category><category>bytecode</category><category>byte</category></item><item><title>Generator in Python</title><link>https://misc.legendu.net/blog/python-generator/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 28 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-28:/blog/python-generator/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>generator</category><category>iterator</category></item><item><title>Axis Range of Plots in HoloViews</title><link>https://misc.legendu.net/blog/python-holoviews-axis-range/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 23 Dec 2019 19:51:09 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-23:/blog/python-holoviews-axis-range/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>visualization</category><category>HoloViews</category><category>axis</category><category>range</category></item><item><title>Use Jedi for Autocompletion in Python</title><link>https://misc.legendu.net/blog/python-Jedi-autocompletion/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Below is an example of auto completion using Jedi in Python.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 23 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-23:/blog/python-Jedi-autocompletion/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>Jedi</category><category>auto completion</category><category>autocompletion</category></item><item><title>Interactive Tools of Plots in HoloViews</title><link>https://misc.legendu.net/blog/python-holoviews-interactive-tools/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 23 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-23:/blog/python-holoviews-interactive-tools/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>visualization</category><category>HoloViews</category><category>interactive tools</category></item><item><title>Legend of Plots in HoloViews</title><link>https://misc.legendu.net/blog/python-holoviews-legend/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 23 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-23:/blog/python-holoviews-legend/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>visualization</category><category>HoloViews</category><category>legend</category></item><item><title>Ndoverlay Plots in HoloViews</title><link>https://misc.legendu.net/blog/python-holoviews-ndoverlay/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 23 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-23:/blog/python-holoviews-ndoverlay/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>visualization</category><category>HoloViews</category><category>Ndoverlay</category></item><item><title>Options of Plots in HoloViews</title><link>https://misc.legendu.net/blog/python-holoviews-options/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 23 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-23:/blog/python-holoviews-options/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>visualization</category><category>HoloViews</category><category>options</category></item><item><title>Overlay Plots in HoloViews</title><link>https://misc.legendu.net/blog/python-holoviews-overlay/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 23 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-23:/blog/python-holoviews-overlay/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>visualization</category><category>HoloViews</category><category>overlay</category></item><item><title>Plot Points in HoloViews</title><link>https://misc.legendu.net/blog/python-holoviews-points/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 23 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-23:/blog/python-holoviews-points/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>visualization</category><category>HoloViews</category><category>points</category></item><item><title>Hands on the time Module in Python</title><link>https://misc.legendu.net/blog/python-time/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;The code below returns the execution time in seconds.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 23 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-23:/blog/python-time/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>time</category></item><item><title>Collections in Kotlin</title><link>https://misc.legendu.net/blog/scala-collections/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Fold-vs-Reduce"&gt;&lt;a href="https://stackoverflow.com/questions/44429419/what-is-basic-difference-between-fold-and-reduce-in-kotlin-when-to-use-which"&gt;Fold vs Reduce&lt;/a&gt;&lt;a class="anchor-link" href="#Fold-vs-Reduce"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;fold&lt;/code&gt; takes an initial value, 
and the first invocation of the lambda you pass to it 
will receive that initial value 
and the first element of the collection as parameters.
&lt;code&gt;reduce&lt;/code&gt; doesn't take an initial value, 
but instead starts with the first element of the collection as the accumulator (called sum in the following example).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 23 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-23:/blog/scala-collections/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>collections</category><category>until</category><category>to</category><category>by</category></item><item><title>Object Oriented Programming in Java</title><link>https://misc.legendu.net/blog/java-oop/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;A static method cannot be abstract in Java. 
 For refer to 
 &lt;a href="https://stackoverflow.com/questions/370962/why-cant-static-methods-be-abstract-in-java"&gt;this discussion on Stackoverflow&lt;/a&gt;
 for rationale behind it. 
 If you need the two together, 
 what you are looking is probably singleton object with inheritance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Singleton objects are more flexible and useful than static methods in Java.
 Please refer to &lt;a href="http://net-informations.com/faq/netfaq/singlestatic.htm"&gt;Singleton Pattern Versus Static Class&lt;/a&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 22 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-22:/blog/java-oop/</guid><category>Computer Science</category><category>programming</category><category>Java</category><category>OOP</category><category>class</category><category>static</category></item><item><title>Implement Singleton in Java</title><link>https://misc.legendu.net/blog/java-singleton/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;An implementation of the singleton pattern must:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ensure that only one instance of the singleton class ever exists; &lt;/li&gt;
&lt;li&gt;and provide global access to that instance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Typically, this is done by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;declaring all constructors of the class to be private; &lt;/li&gt;
&lt;li&gt;and providing a static method that returns a reference to the instance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The instance is usually stored as a private static variable; 
the instance is created when the variable is initialized, 
at some point before the static method is first called. 
The following is a sample implementation written in Java.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sun, 22 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-22:/blog/java-singleton/</guid><category>Computer Science</category><category>programming</category><category>Java</category><category>singleton</category><category>class</category></item><item><title>String in Java</title><link>https://misc.legendu.net/blog/java-string/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;String is a immutable class in Java. 
 Extensive operations on strings (e.g., &lt;code&gt;+&lt;/code&gt; in a big loop) is usually very slow before Java 7
 (the &lt;code&gt;+&lt;/code&gt; operator is optimized by the compiler automatically starting from Java 7).
 To avoid this problem (in older versions of Java), 
 you can use the &lt;code&gt;StringBuilder&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 20 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-20:/blog/java-string/</guid><category>Computer Science</category><category>programming</category><category>JVM</category><category>Java</category><category>string</category></item><item><title>Aggregate DataFrames in Spark</title><link>https://misc.legendu.net/blog/pyspark-dataframe-aggregation/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Aggregation-Without-Grouping"&gt;Aggregation Without Grouping&lt;a class="anchor-link" href="#Aggregation-Without-Grouping"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;You can aggregate all values in Columns of a DataFrame.
 Just use aggregation functions in &lt;code&gt;select&lt;/code&gt; without &lt;code&gt;groupBy&lt;/code&gt;,
 which is very similar to SQL syntax.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The aggregation functions &lt;code&gt;all&lt;/code&gt; and &lt;code&gt;any&lt;/code&gt; are available since Spark 3.0. 
 However,
 they can be achieved using other aggregation functions such as &lt;code&gt;sum&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 20 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-20:/blog/pyspark-dataframe-aggregation/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>DataFrame</category><category>aggregation</category><category>group by</category></item><item><title>Using Optimus for Data Profiling in PySpark</title><link>https://misc.legendu.net/blog/pyspark-optimus-data-profiling/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-&amp;amp;-Traps"&gt;Tips &amp;amp; Traps&lt;a class="anchor-link" href="#Tips-&amp;amp;-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Optimus requires Python 3.6+.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 19 Dec 2019 09:44:16 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-19:/blog/pyspark-optimus-data-profiling/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>HPC</category><category>high performance computing</category><category>PySpark</category><category>Optimus</category><category>data profiling</category><category>data profile</category></item><item><title>Hands on the Python module Multiprocessing</title><link>https://misc.legendu.net/blog/python-multiprocessing/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/uqfoundation/multiprocess"&gt;multiprocess&lt;/a&gt;
 is a fork of the Python standard libary 
 &lt;a href="https://docs.python.org/3/library/multiprocessing.html"&gt;multiprocessing&lt;/a&gt;
 . 
 multiprocess extends multiprocessing to provide enhanced serialization, using dill. 
 multiprocess leverages multiprocessing to support the spawning of processes 
 using the API of the python standard library's threading module.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;multiprocessing.Pool.map&lt;/code&gt; does not work with lambda functions
 due to the fact that lambda functions cannot be pickled.
 There are multiple approaches to avoid the issue.
 You can define a function or use &lt;code&gt;functools.partial&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 19 Dec 2019 09:43:02 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-19:/blog/python-multiprocessing/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>HPC</category><category>high performance computing</category><category>multiprocessing</category><category>parallel computing</category></item><item><title>Hands on the Python module threading</title><link>https://misc.legendu.net/blog/python-threading/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3/library/threading.html#module-threading"&gt;https://docs.python.org/3/library/threading.html#module-threading&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3/library/_thread.html#module-_thread"&gt;https://docs.python.org/3/library/_thread.html#module-_thread&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 19 Dec 2019 09:41:32 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-19:/blog/python-threading/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>HPC</category><category>high performance computing</category><category>threading</category><category>thread</category></item><item><title>BufferedReader in Java IO</title><link>https://misc.legendu.net/blog/java-io-bufferedreader/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comemnt"&gt;Comemnt&lt;a class="anchor-link" href="#Comemnt"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;The methods &lt;code&gt;BufferedRead.readLine&lt;/code&gt; and &lt;code&gt;BufferedRead.lines&lt;/code&gt; 
 are very helpful for reading text Files.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="public-String-BufferedRead.readLine"&gt;public String &lt;a href="https://docs.oracle.com/javase/8/docs/api/java/io/BufferedReader.html#readLine--"&gt;BufferedRead.readLine&lt;/a&gt;&lt;a class="anchor-link" href="#public-String-BufferedRead.readLine"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Reads a line of text. A line is considered to be terminated by any one of a line feed ('\n'), a carriage return ('\r'), or a carriage return followed immediately by a linefeed.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="public-Stream\&amp;lt;String&amp;gt;-BufferedRead.lines"&gt;public Stream\&amp;lt;String&amp;gt; &lt;a href="https://docs.oracle.com/javase/8/docs/api/java/io/BufferedReader.html#lines--"&gt;BufferedRead.lines&lt;/a&gt;&lt;a class="anchor-link" href="#public-Stream\&amp;lt;String&amp;gt;-BufferedRead.lines"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Returns a Stream, the elements of which are lines read from this BufferedReader. The Stream is lazily populated, i.e., read only occurs during the terminal stream operation.
The reader must not be operated on during the execution of the terminal stream operation. Otherwise, the result of the terminal stream operation is undefined.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 19 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-19:/blog/java-io-bufferedreader/</guid><category>Computer Science</category><category>programming</category><category>JVM</category><category>Java</category><category>IO</category><category>BufferedReader</category></item><item><title>Builtin Objects Python</title><link>https://misc.legendu.net/blog/python-builtins/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Python has built-in functions and object that users can use directly (no need to import).
However, 
if you import another module which hide a built-in function or object,
you cannot use it anymore. 
For example, 
&lt;code&gt;sum&lt;/code&gt; is a built-in function in Python which can be used directly.
However, 
if you use PySpark import SQL functions (&lt;code&gt;from pyspark.sql.functions import *&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 19 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-19:/blog/python-builtins/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>builtins</category></item><item><title>HashMap in Scala</title><link>https://misc.legendu.net/blog/scala-hashmap/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comment"&gt;Comment&lt;a class="anchor-link" href="#Comment"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;HashTable is a trait without a factory method and thus cannot be instantiated. 
HashMap and HashSet are subclasses that you should use.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/3648870/scala-using-hashmap-with-a-default-value"&gt;https://stackoverflow.com/questions/3648870/scala-using-hashmap-with-a-default-value&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 19 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-19:/blog/scala-hashmap/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>HashMap</category><category>Map</category><category>Hashtable</category><category>dictionary</category></item><item><title>The Source Class in Scala IO</title><link>https://misc.legendu.net/blog/scala-io-source/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 19 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-19:/blog/scala-io-source/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>InputStream</category><category>JVM</category><category>IO</category><category>stream</category><category>Source</category><category>BufferedSource</category></item><item><title>Assert in Java</title><link>https://misc.legendu.net/blog/java-assert/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;ol&gt;
&lt;li&gt;Avoid using &lt;code&gt;assert&lt;/code&gt; in Java production code as assertion is not turned on by default. 
 Throw exception instead (since assert is just a syntax sugar of throwing exceptions).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The most important thing to remember about assertions is that they can be disabled, so never assume they'll be executed.&lt;/p&gt;
&lt;p&gt;Therefore keep the followings things in mind when using assertions:&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 16 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-16:/blog/java-assert/</guid><category>Computer Science</category><category>programming</category><category>JVM</category><category>Java</category><category>assert</category><category>assertion</category></item><item><title>MutableList in Kotlin</title><link>https://misc.legendu.net/blog/kotlin-mutable-list/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="MutableList-vs-ArrayList"&gt;&lt;a href="https://stackoverflow.com/questions/43114367/difference-between-arrayliststring-and-mutablelistofstring-in-kotlin"&gt;MutableList vs ArrayList&lt;/a&gt;&lt;a class="anchor-link" href="#MutableList-vs-ArrayList"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;MutableList is ArrayList in Kotlin currently.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Create-an-Empty-MutableList"&gt;Create an Empty MutableList&lt;a class="anchor-link" href="#Create-an-Empty-MutableList"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Below is the most idiomatical way to create an empty mutable list in Kotlin.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 16 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-16:/blog/kotlin-mutable-list/</guid><category>Computer Science</category><category>programming</category><category>Kotlin</category><category>JVM</category><category>collections</category><category>MutableList</category><category>ArrayList</category></item><item><title>Row-based Mapping and Filtering on DataFrames in Spark</title><link>https://misc.legendu.net/blog/spark-row-mapping-filtering/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Spark &lt;code&gt;DataFrame&lt;/code&gt; is an alias to &lt;code&gt;Dataset[Row]&lt;/code&gt;.
Even though a Spark DataFrame is stored as Rows in a Dataset,
built-in operations/functions (in org.apache.spark.sql.functions) for Spark DataFrame are Column-based.
Sometimes, 
there might be transformations on a DataFrame that is hard to express as Column expressions
but rather evey convenient to express as Row expressions. 
The traditional way to resolve this issue is to wrap the row-based function into a UDF.
It is worthing knowing that Spark DataFrame supports map/flatMap APIs 
which works on Rows. 
They are still experimental as Spark 2.4.3.
It is suggested that you stick to Column-based operations/functions until the Row-based methods mature.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 13 Dec 2019 10:53:33 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-13:/blog/spark-row-mapping-filtering/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>DataFrame</category><category>column</category><category>map</category><category>filter</category></item><item><title>Cut and qcut in pandas DataFrame</title><link>https://misc.legendu.net/blog/python-pandas-cut-qcut/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 13 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-13:/blog/python-pandas-cut-qcut/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>pandas</category><category>DataFrame</category><category>cut</category><category>qcut</category></item><item><title>Row Object in Spark</title><link>https://misc.legendu.net/blog/spark-row/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 13 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-13:/blog/spark-row/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>DataFrame</category><category>row</category></item><item><title>Aggregation in pandas DataFrame</title><link>https://misc.legendu.net/blog/python-pandas-aggregation/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://www.shanelynn.ie/summarising-aggregation-and-grouping-data-in-python-pandas/"&gt;https://www.shanelynn.ie/summarising-aggregation-and-grouping-data-in-python-pandas/&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comment"&gt;Comment&lt;a class="anchor-link" href="#Comment"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The order of elements within each group are preserved (as the original order).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;groupby&lt;/code&gt; works exactly the same on index if the index is named.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The order of columns in groupby matters if you want unstack the results later.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;groupby works on columns too and it can group by some level of a MultiIndex.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 12 Dec 2019 21:25:14 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-12:/blog/python-pandas-aggregation/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>pandas</category><category>DataFrame</category><category>group by</category><category>groupby</category><category>aggregation</category></item><item><title>Hands on krangl in Kotlin</title><link>https://misc.legendu.net/blog/kotlin-krangl/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 12 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-12:/blog/kotlin-krangl/</guid><category>Computer Science</category><category>programming</category><category>Kotlin</category><category>DataFrame</category><category>data frame</category><category>krangl</category></item><item><title>Use Tablesaw with Kotlin</title><link>https://misc.legendu.net/blog/kotlin-tablesaw/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 12 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-12:/blog/kotlin-tablesaw/</guid><category>Computer Science</category><category>programming</category><category>Kotlin</category><category>DataFrame</category><category>Tablesaw</category></item><item><title>Functions in Bash</title><link>https://misc.legendu.net/blog/bash-functions/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;By default, 
variables defined in a function are global,
i.e., 
they are visible outside the function too.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 04 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-04:/blog/bash-functions/</guid><category>Computer Science</category><category>programming</category><category>Bash</category><category>functions</category></item><item><title>File Name of Bash Script</title><link>https://misc.legendu.net/blog/bash-file-name/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Do NOT get into this messy shit if you can avoid it! 
 Use Python script instead if you can.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you want to reliably get the name of a Bash script, 
 it is recommended that you run the Bash script as an executable script instead of source it in.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 03 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-03:/blog/bash-file-name/</guid><category>Computer Science</category><category>programming</category><category>Bash</category><category>file name</category></item><item><title>Loops in Bash</title><link>https://misc.legendu.net/blog/bash-loops/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Forggeting &lt;code&gt;$&lt;/code&gt; is a common mistake when using a shell variable.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 03 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-03:/blog/bash-loops/</guid><category>Computer Science</category><category>programming</category><category>Bash</category><category>loop</category></item><item><title>Case of Column Names in Spark DataFrames</title><link>https://misc.legendu.net/blog/spark-case-col-names/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Even though Spark DataFrame/SQL APIs do not distinguish cases of column names,
the columns saved into HDFS are case-sensitive!&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 03 Dec 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-12-03:/blog/spark-case-col-names/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>DataFrame</category><category>case</category><category>column names</category></item><item><title>Convert Between Byte Array and String in Java</title><link>https://misc.legendu.net/blog/java-bytes-string/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://howtodoinjava.com/array/convert-byte-array-string-vice-versa/"&gt;Convert byte[] array to String – Convert String to byte[] array in Java&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 27 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-27:/blog/java-bytes-string/</guid><category>Computer Science</category><category>programming</category><category>JVM</category><category>Java</category><category>byte array</category><category>bytes</category><category>string</category></item><item><title>Round/Format Numbers in Java</title><link>https://misc.legendu.net/blog/java-round-format-numbers/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="System.out.printf"&gt;System.out.printf&lt;a class="anchor-link" href="#System.out.printf"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 27 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-27:/blog/java-round-format-numbers/</guid><category>Computer Science</category><category>programming</category><category>JVM</category><category>Java</category><category>rounding</category><category>formatting</category></item><item><title>Format String in Java</title><link>https://misc.legendu.net/blog/java-string-format/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="StringSubstitutor"&gt;&lt;a href="https://commons.apache.org/proper/commons-text/apidocs/org/apache/commons/text/StringSubstitutor.html"&gt;StringSubstitutor&lt;/a&gt;&lt;a class="anchor-link" href="#StringSubstitutor"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 27 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-27:/blog/java-string-format/</guid><category>Computer Science</category><category>programming</category><category>JVM</category><category>Java</category><category>format</category><category>string</category><category>formatting</category></item><item><title>OOP in Kotlin</title><link>https://misc.legendu.net/blog/hashmap-oop/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="References"&gt;References&lt;a class="anchor-link" href="#References"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://kotlinlang.org/docs/reference/classes.html"&gt;https://kotlinlang.org/docs/reference/classes.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.baeldung.com/kotlin-constructors"&gt;https://www.baeldung.com/kotlin-constructors&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 26 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-26:/blog/hashmap-oop/</guid><category>Computer Science</category><category>programming</category><category>Kotlin</category><category>JVM</category><category>collections</category><category>OOP</category><category>class</category><category>inheritance</category></item><item><title>Read/Write Parquet Files in Spark</title><link>https://misc.legendu.net/blog/spark-io-parquet/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.sql.DataFrameReader"&gt;DataFrameReader&lt;/a&gt; 
APIs&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.sql.DataFrameWriter"&gt;DataFrameWriter&lt;/a&gt;
APIs&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spark.apache.org/docs/latest/sql-programming-guide.html#data-sources"&gt;https://spark.apache.org/docs/latest/sql-programming-guide.html#data-sources&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 26 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-26:/blog/spark-io-parquet/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>Parquet</category></item><item><title>Read/Write TSV in Spark</title><link>https://misc.legendu.net/blog/spark-io-tsv/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 26 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-26:/blog/spark-io-tsv/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>TSV</category><category>text</category></item><item><title>Read/Write CSV in Spark</title><link>https://misc.legendu.net/blog/spark-sql-parser/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://rtahboub.github.io/blog/2018/writing-customized-parser/"&gt;Writing a customized Spark SQL Parser&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.waitingforcode.com/apache-spark-sql/writing-custom-optimization-apache-spark-sql-parser/read"&gt;Writing custom optimization in Apache Spark SQL - parser&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/apache/spark/blob/master/sql/core/src/main/scala/org/apache/spark/sql/execution/SparkSqlParser.scala"&gt;SparkSqlParser.scala&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/44242068/what-part-of-spark-sql-parse-sql-statements-and-create-execution-plan"&gt;What part of Spark SQL parse SQL statements and create execution plan?&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 26 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-26:/blog/spark-sql-parser/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>CSV</category><category>text</category></item><item><title>Unit Testing for Spark</title><link>https://misc.legendu.net/blog/spark-unit-test/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Static-Analyzer"&gt;Static Analyzer&lt;a class="anchor-link" href="#Static-Analyzer"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;If we get the execuation plan, 
then it is quite easy to analyze ...&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jaceklaskowski.gitbooks.io/mastering-apache-spark/spark-rdd-lineage.html"&gt;https://jaceklaskowski.gitbooks.io/mastering-apache-spark/spark-rdd-lineage.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jaceklaskowski.gitbooks.io/mastering-apache-spark/spark-rdd-dependencies.html"&gt;https://jaceklaskowski.gitbooks.io/mastering-apache-spark/spark-rdd-dependencies.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://hydronitrogen.com/in-the-code-spark-sql-query-planning-and-execution.html"&gt;http://hydronitrogen.com/in-the-code-spark-sql-query-planning-and-execution.html&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Spark-Testing-Frameworks/Tools"&gt;Spark Testing Frameworks/Tools&lt;a class="anchor-link" href="#Spark-Testing-Frameworks/Tools"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;You can use Scala testing frameworks ScalaTest (recommended) and Specs, 
or you can use frameworks/tools developed based on them for Spark specifically.
Various discussions suggests that &lt;strong&gt;Spark Testing Base&lt;/strong&gt; is a good one.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.slideshare.net/SparkSummit/beyond-parallelize-and-collect-by-holden-karau"&gt;https://www.slideshare.net/SparkSummit/beyond-parallelize-and-collect-by-holden-karau&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="Spark-Unit-Testing"&gt;Spark Unit Testing&lt;a class="anchor-link" href="#Spark-Unit-Testing"&gt;&amp;#182;&lt;/a&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 26 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-26:/blog/spark-unit-test/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Spark</category><category>unit testing</category><category>unit test</category></item><item><title>Hands on the Python module dask</title><link>https://misc.legendu.net/blog/hands-on-the-python-module-dask/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://docs.dask.org/en/latest/"&gt;https://docs.dask.org/en/latest/&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Installation"&gt;Installation&lt;a class="anchor-link" href="#Installation"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;You have to install the complete version of Dask (using the command &lt;code&gt;pip3 install dask[complete]&lt;/code&gt;)
 if you need support of extended memory (for handling big data) and schedulers (for performance).
 The default installation version (&lt;code&gt;pip3 install dask&lt;/code&gt;) of Dask
 does not include those features out-of-box.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 25 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-25:/blog/hands-on-the-python-module-dask/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>dask</category><category>data frame</category><category>pandas</category></item><item><title>Misc Tips on Kotlin</title><link>https://misc.legendu.net/blog/kotlin-misc-tips/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Forget to return is a common and tricky mistake in Kotlin!&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Unpack-Values"&gt;Unpack Values&lt;a class="anchor-link" href="#Unpack-Values"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 25 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-25:/blog/kotlin-misc-tips/</guid><category>Computer Science</category><category>programming</category><category>JVM</category><category>Kotlin</category><category>misc tips</category></item><item><title>Named Arguments in Kotlin</title><link>https://misc.legendu.net/blog/kotlin-named-arguments/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Function-Overload-and-Named-Arguments"&gt;Function Overload and Named Arguments&lt;a class="anchor-link" href="#Function-Overload-and-Named-Arguments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Function overload might cause tricky invoking bugs 
 if you change the signature of an overloaded function.
 You should always be careful when you change the signature of an overloaded function.
 There is a graceful way of resolving this kind of issues 
 in Kotlin (and similarly in Scala and Python),
 which is to use named arguments. 
 If you invoke an function with named arguments,
 it is relatively robust to change of order of arguments
 and it fails fast if you change the names of arguments.&lt;/li&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 23 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-23:/blog/kotlin-named-arguments/</guid><category>Computer Science</category><category>programming</category><category>JVM</category><category>Kotlin</category><category>function</category><category>named arguments</category><category>overloading</category></item><item><title>Bitwise Operators in Java</title><link>https://misc.legendu.net/blog/bitwise-operators-java/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://introcs.cs.princeton.edu/java/11precedence/"&gt;Java Operator Precedence&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The Bitwise operators has relative low precedence. 
 They have lower precedence than arithmatical operators.
 It is suggested that you use parentheses when you mix lower precendenc 
 (bitwise opertors, ternary opertor, etc.) 
 and high precendenc operators together.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There is no unsigned left shift operator in Java.
&lt;a href="https://www.quora.com/Why-is-there-no-unsigned-left-shift-operator-in-Java"&gt;https://www.quora.com/Why-is-there-no-unsigned-left-shift-operator-in-Java&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 22 Nov 2019 09:21:59 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-22:/blog/bitwise-operators-java/</guid><category>Computer Science</category><category>programming</category><category>JVM</category><category>Java</category><category>bitwise operators</category></item><item><title>Hashmap in Kotlin</title><link>https://misc.legendu.net/blog/hashmap-kotlin/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="References"&gt;References&lt;a class="anchor-link" href="#References"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-map/index.html#kotlin.collections.Map"&gt;https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-map/index.html#kotlin.collections.Map&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;LinkedHashMap preserves the insertion order (which is similar to dict in Python 3.7+).&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 22 Nov 2019 08:58:49 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-22:/blog/hashmap-kotlin/</guid><category>Computer Science</category><category>programming</category><category>Kotlin</category><category>JVM</category><category>collections</category><category>Hashmap</category><category>Hashtable</category><category>dictionary</category></item><item><title>Set in Java</title><link>https://misc.legendu.net/blog/java-set/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Reference"&gt;Reference&lt;a class="anchor-link" href="#Reference"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 22 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-22:/blog/java-set/</guid><category>Computer Science</category><category>programming</category><category>JVM</category><category>Java</category><category>Set</category></item><item><title>Rounding Numbers in Kotlin</title><link>https://misc.legendu.net/blog/kotlin-round-numbers/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="System.out.printf"&gt;System.out.printf&lt;a class="anchor-link" href="#System.out.printf"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 22 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-22:/blog/kotlin-round-numbers/</guid><category>Computer Science</category><category>programming</category><category>JVM</category><category>Kotlin</category><category>round</category><category>round numbers</category><category>rounding</category></item><item><title>Understand System.identityHashCode in Java</title><link>https://misc.legendu.net/blog/java-identityHashCode/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;You cannot get the address of an object in Java (without hacking).
 &lt;code&gt;System.identityHashCode(obj)&lt;/code&gt; is the next best thing you can have.
 This trick (combined with the timestamp) is used to 
 generate default seed for random number generators in Java.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 21 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-21:/blog/java-identityHashCode/</guid><category>Computer Science</category><category>programming</category><category>JVM</category><category>Java</category><category>identityHashCode</category><category>address</category><category>RNG</category></item><item><title>Java IO</title><link>https://misc.legendu.net/blog/java-io/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="References"&gt;References&lt;a class="anchor-link" href="#References"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Generally speaking, 
 BufferedReader/BufferedWrite are preferred over InputStreamReader/InputStreamWriter.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="https://docs.oracle.com/javase/8/docs/api/java/io/BufferedWriter.html"&gt;https://docs.oracle.com/javase/8/docs/api/java/io/BufferedWriter.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/6976893/in-java-what-is-the-advantage-of-using-bufferedwriter-to-append-to-a-file"&gt;https://stackoverflow.com/questions/6976893/in-java-what-is-the-advantage-of-using-bufferedwriter-to-append-to-a-file&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="public-static-Stream\&amp;lt;String&amp;gt;-java.nio.file.Files.lines"&gt;public static Stream\&amp;lt;String&amp;gt; &lt;a href="https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#lines-java.nio.file.Path-"&gt;java.nio.file.Files.lines&lt;/a&gt;&lt;a class="anchor-link" href="#public-static-Stream\&amp;lt;String&amp;gt;-java.nio.file.Files.lines"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="public-static-List\&amp;lt;String&amp;gt;-java.nio.file.Files.readAllLines"&gt;public static List\&amp;lt;String&amp;gt; &lt;a href="https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#readAllLines-java.nio.file.Path-"&gt;java.nio.file.Files.readAllLines&lt;/a&gt;&lt;a class="anchor-link" href="#public-static-List\&amp;lt;String&amp;gt;-java.nio.file.Files.readAllLines"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Read all lines from a file. 
Bytes from the file are decoded into characters using the UTF-8 charset.
Notice that this method returns a List of Strings,
which is different from the method &lt;code&gt;java.nio.file.Files.lines&lt;/code&gt; (who returns a Stream of Strings).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 21 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-21:/blog/java-io/</guid><category>Computer Science</category><category>programming</category><category>JVM</category><category>Java</category><category>IO</category></item><item><title>Kotlin IO</title><link>https://misc.legendu.net/blog/kotlin-io/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="References"&gt;References&lt;a class="anchor-link" href="#References"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.io/java.io.-file/writer.html"&gt;https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.io/java.io.-file/writer.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.io/java.io.-file/buffered-writer.html"&gt;https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.io/java.io.-file/buffered-writer.html&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 21 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-21:/blog/kotlin-io/</guid><category>Computer Science</category><category>programming</category><category>Kotlin</category><category>IO</category></item><item><title>Array in Kotlin</title><link>https://misc.legendu.net/blog/array-kotlin/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;An array in Java is not an &lt;code&gt;Iterable&lt;/code&gt; (due to design reasons).
 There is no super class of array and &lt;code&gt;Iterable&lt;/code&gt; either in Java.
 If you want a method to support both array and &lt;code&gt;Iterable&lt;/code&gt; as the parameter,
 you need to overload it (for both array and &lt;code&gt;Iterable&lt;/code&gt;.)
 It is the same situation in Kotlin as Kotlin is mostly Java.&lt;/li&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 18 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-18:/blog/array-kotlin/</guid><category>Computer Science</category><category>programming</category><category>Kotlin</category><category>JVM</category><category>collections</category><category>Array</category></item><item><title>Bitwise Operators in Kotlin</title><link>https://misc.legendu.net/blog/bitwise-operators-kotlin/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;When you use &lt;code&gt;1L shl 2&lt;/code&gt;, 
 &lt;code&gt;shl&lt;/code&gt; is considered as the left-shift operator
 instead of a method call.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bitwise operators are computed from left to the right.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bitwise operators have relatively low priority (lower than arithmatic operators),
 It is suggested that you use parentheses when you mix lower precendenc (bitwise opertors, ternary opertor, etc.) 
 and high precendenc operators together.
 A even better approach in Kotlin is to avoid using bitwise operators
 and use the corresponding methods instead.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 18 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-18:/blog/bitwise-operators-kotlin/</guid><category>Computer Science</category><category>programming</category><category>Kotlin</category><category>bit</category><category>bitwise operators</category></item><item><title>Collections in Kotlin</title><link>https://misc.legendu.net/blog/collections-kotlin/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Fold-vs-Reduce"&gt;&lt;a href="https://stackoverflow.com/questions/44429419/what-is-basic-difference-between-fold-and-reduce-in-kotlin-when-to-use-which"&gt;Fold vs Reduce&lt;/a&gt;&lt;a class="anchor-link" href="#Fold-vs-Reduce"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;fold&lt;/code&gt; takes an initial value, 
and the first invocation of the lambda you pass to it 
will receive that initial value 
and the first element of the collection as parameters.
&lt;code&gt;reduce&lt;/code&gt; doesn't take an initial value, 
but instead starts with the first element of the collection as the accumulator (called sum in the following example).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 18 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-18:/blog/collections-kotlin/</guid><category>Computer Science</category><category>programming</category><category>Kotlin</category><category>JVM</category><category>collections</category><category>Array</category><category>List</category><category>Map</category><category>Set</category></item><item><title>Array in Scala</title><link>https://misc.legendu.net/blog/kotlin-array/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Construct an element with initial values.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 18 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-18:/blog/kotlin-array/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>JVM</category><category>collections</category><category>Array</category></item><item><title>Iterator in Kotlin</title><link>https://misc.legendu.net/blog/kotlin-iterator/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Tips-and-Traps"&gt;Tips and Traps&lt;a class="anchor-link" href="#Tips-and-Traps"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Notice that &lt;a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/map.html"&gt;Iterable.map&lt;/a&gt; 
 returns a List instead of an iterator.
 Since almost all collections in Kotlin eventually inherit from &lt;code&gt;Iterable&lt;/code&gt;,
 the &lt;code&gt;map&lt;/code&gt; method of all collections (including &lt;code&gt;HashMap&lt;/code&gt;) in Kotlin returns List.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="References"&gt;References&lt;a class="anchor-link" href="#References"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-iterable/"&gt;https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-iterable/&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 18 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-18:/blog/kotlin-iterator/</guid><category>Computer Science</category><category>programming</category><category>Kotlin</category><category>JVM</category><category>collections</category><category>iterator</category></item><item><title>List in Kotlin</title><link>https://misc.legendu.net/blog/kotlin-list/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Create-an-Empty-List"&gt;Create an Empty List&lt;a class="anchor-link" href="#Create-an-Empty-List"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 18 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-18:/blog/kotlin-list/</guid><category>Computer Science</category><category>programming</category><category>Kotlin</category><category>JVM</category><category>collections</category><category>List</category></item><item><title>Sort a List in Kotlin</title><link>https://misc.legendu.net/blog/kotlin-list-sort/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="sorted"&gt;sorted&lt;a class="anchor-link" href="#sorted"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;If elements in a List implements the Comparable interface,
you can call the method &lt;code&gt;sorted&lt;/code&gt; to return a sorted List (in nature order).&lt;/p&gt;
&lt;p&gt;Note: Pair in Kotin does not implement the Comparable interface!!!&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 18 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-18:/blog/kotlin-list-sort/</guid><category>Computer Science</category><category>programming</category><category>Kotlin</category><category>JVM</category><category>collections</category><category>List</category><category>sorting</category><category>sort</category></item><item><title>Returns and Jumps in Kotlin</title><link>https://misc.legendu.net/blog/returns-jumps-kotlin/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="References"&gt;References&lt;a class="anchor-link" href="#References"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://kotlinlang.org/docs/reference/returns.html"&gt;https://kotlinlang.org/docs/reference/returns.html&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Break at label is a convenient way to jump out of a nested loop.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 18 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-18:/blog/returns-jumps-kotlin/</guid><category>Computer Science</category><category>programming</category><category>Kotlin</category><category>JVM</category><category>return</category><category>jump</category><category>break</category><category>continue</category></item><item><title>Python Scripting for Blender</title><link>https://misc.legendu.net/blog/python-blender/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="References"&gt;References&lt;a class="anchor-link" href="#References"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PLa1F2ddGya_-UvuAqHAksYnB0qL9yWDO6"&gt;https://www.youtube.com/playlist?list=PLa1F2ddGya_-UvuAqHAksYnB0qL9yWDO6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=pywbPQD9vYU"&gt;https://www.youtube.com/watch?v=pywbPQD9vYU&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blender.stackexchange.com/questions/43520/extract-sequence-of-frames-from-imported-mp4-scripted"&gt;https://blender.stackexchange.com/questions/43520/extract-sequence-of-frames-from-imported-mp4-scripted&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blenderartists.org/t/how-to-get-particular-frame-of-video-image/590889"&gt;https://blenderartists.org/t/how-to-get-particular-frame-of-video-image/590889&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 14 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-14:/blog/python-blender/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>Blender</category><category>computer vision</category><category>CV</category><category>video</category><category>image</category></item><item><title>Options for the pandas Package in Python</title><link>https://misc.legendu.net/blog/options-pandas-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/options.html"&gt;https://pandas.pydata.org/pandas-docs/stable/user_guide/options.html&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 13 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-13:/blog/options-pandas-python/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>pandas</category><category>options</category></item><item><title>Plot Histogram Using HoloViews</title><link>https://misc.legendu.net/blog/holoviews-histogram/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Reference"&gt;Reference&lt;a class="anchor-link" href="#Reference"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="http://holoviews.org/reference/elements/bokeh/Histogram.html"&gt;http://holoviews.org/reference/elements/bokeh/Histogram.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;HoloViews.Histogram&lt;/code&gt; takes the output of &lt;code&gt;np.histogram&lt;/code&gt; as input and generate a histogram plot.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 08 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-08:/blog/holoviews-histogram/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>visualization</category><category>HoloViews</category><category>histogram</category></item><item><title>Scatter Plot Using HoloViews in Python</title><link>https://misc.legendu.net/blog/python-holoviews-scatter/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 08 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-08:/blog/python-holoviews-scatter/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>visualization</category><category>HoloViews</category><category>scatter</category></item><item><title>Merge/Join pandas DataFrames</title><link>https://misc.legendu.net/blog/merge-join-pandas-dataframes/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Reference"&gt;Reference&lt;a class="anchor-link" href="#Reference"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://pandas.pydata.org/pandas-docs/stable/merging.html"&gt;https://pandas.pydata.org/pandas-docs/stable/merging.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/22676081/pandas-the-difference-between-join-and-merge"&gt;http://stackoverflow.com/questions/22676081/pandas-the-difference-between-join-and-merge&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="Comment"&gt;Comment&lt;a class="anchor-link" href="#Comment"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;You are able to specify (via &lt;code&gt;left_on&lt;/code&gt; and &lt;code&gt;right_on&lt;/code&gt;) which columns to join in each data frame.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Columns that appear in both data frames but not used in joining are distinguished using suffixes.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 07 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-07:/blog/merge-join-pandas-dataframes/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>pandas</category><category>DataFrame</category><category>merge</category><category>join</category></item><item><title>Pivot Table in pandas DataFrame</title><link>https://misc.legendu.net/blog/pivot-table-pandas-dataframe/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="DataFrame.pivot-vs-pandas.pivot_table"&gt;&lt;code&gt;DataFrame.pivot&lt;/code&gt; vs &lt;code&gt;pandas.pivot_table&lt;/code&gt;&lt;a class="anchor-link" href="#DataFrame.pivot-vs-pandas.pivot_table"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Both &lt;code&gt;DataFrame.pivot&lt;/code&gt; and &lt;code&gt;pandas.pivot_table&lt;/code&gt; can generate pivot tables.
&lt;code&gt;pandas.pivot_table&lt;/code&gt; aggregate values while &lt;code&gt;DataFrame.pivot&lt;/code&gt; not. &lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Thu, 07 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-07:/blog/pivot-table-pandas-dataframe/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>pandas</category><category>DataFrame</category><category>pivot table</category></item><item><title>Arrays in Java</title><link>https://misc.legendu.net/blog/arrays-in-java/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;An array in Java is not an &lt;code&gt;Iterable&lt;/code&gt; (due to design reasons).
 There is no super class of array and &lt;code&gt;Iterable&lt;/code&gt; either in Java.
 If you want a method to support both array and &lt;code&gt;Iterable&lt;/code&gt; as the parameter,
 you need to overload it (for both array and &lt;code&gt;Iterable&lt;/code&gt;.)
 It is the same situation in Kotlin as Kotlin is mostly Java.&lt;/li&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 05 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-05:/blog/arrays-in-java/</guid><category>Computer Science</category><category>programming</category><category>JVM</category><category>Java</category><category>array</category><category>compare</category><category>comparison</category><category>Arrays.equals</category></item><item><title>Example of Using Reflection in Java</title><link>https://misc.legendu.net/blog/example-reflection-java/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 05 Nov 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-05:/blog/example-reflection-java/</guid><category>Computer Science</category><category>programming</category><category>JVM</category><category>Java</category><category>reflection</category><category>private</category></item><item><title>Hands on the urllib Module in Python</title><link>https://misc.legendu.net/blog/hands-on-urlib-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;It is suggested that you use the requests module instead of urllib
 unless you want to have minimal 3rd-party dependencies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You have to explicit import &lt;code&gt;urllib.request&lt;/code&gt; in order to use it in Python 3. 
 Please refer to &lt;a href="https://bugs.python.org/issue36701"&gt;https://bugs.python.org/issue36701&lt;/a&gt; for more discussions. 
 This is how Python 3 intends to work generally speaking. 
 Of course, 
 there are a few exceptions such as &lt;code&gt;os.path&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 02 Nov 2019 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-02:/blog/hands-on-urlib-python/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>urllib</category><category>web</category><category>network</category></item><item><title>String functions in Kotlin</title><link>https://misc.legendu.net/blog/string-functions-kotlin/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="References"&gt;References&lt;a class="anchor-link" href="#References"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/index.html"&gt;https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/index.html&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="trimIndent"&gt;&lt;a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/trim-indent.html"&gt;trimIndent&lt;/a&gt;&lt;a class="anchor-link" href="#trimIndent"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Fri, 01 Nov 2019 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-11-01:/blog/string-functions-kotlin/</guid><category>Computer Science</category><category>programming</category><category>Kotlin</category><category>JVM</category><category>text</category><category>string</category></item><item><title>Conversions between Java and Scala Collections</title><link>https://misc.legendu.net/blog/conversions-between-java-and-scala-collections/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://www.scala-lang.org/api/2.13.0/scala/jdk/CollectionConverters$.html"&gt;https://www.scala-lang.org/api/2.13.0/scala/jdk/CollectionConverters$.html&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/8301947/what-is-the-difference-between-javaconverters-and-javaconversions-in-scala"&gt;https://stackoverflow.com/questions/8301947/what-is-the-difference-between-javaconverters-and-javaconversions-in-scala&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Short-Story"&gt;Short Story&lt;a class="anchor-link" href="#Short-Story"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Just import &lt;code&gt;scala.collection.JavaConverters._&lt;/code&gt;.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 26 Oct 2019 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-10-26:/blog/conversions-between-java-and-scala-collections/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>JVM</category><category>Java</category></item><item><title>Good Third-party Math Libraries for Scala</title><link>https://misc.legendu.net/blog/good-3rd-party-math-lib-scala/</link><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 26 Oct 2019 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-10-26:/blog/good-3rd-party-math-lib-scala/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>Java</category><category>JVM</category><category>math</category><category>library</category></item><item><title>Hands on the Combinations class in Apache Commons Math</title><link>https://misc.legendu.net/blog/hands-on-apache-commons-math-Combinations/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://commons.apache.org/proper/commons-math/javadocs/api-3.4/org/apache/commons/math3/util/Combinations.html"&gt;http://commons.apache.org/proper/commons-math/javadocs/api-3.4/org/apache/commons/math3/util/Combinations.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://google.github.io/guava/releases/19.0/api/docs/com/google/common/collect/Collections2.html"&gt;https://google.github.io/guava/releases/19.0/api/docs/com/google/common/collect/Collections2.html&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 26 Oct 2019 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-10-26:/blog/hands-on-apache-commons-math-Combinations/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>JVM</category><category>Java</category><category>Apache</category><category>Commons Math</category><category>statistics</category><category>Combinations</category></item><item><title>Hands on the CombinatoricsUtils class in Apache Commons Math</title><link>https://misc.legendu.net/blog/hands-on-apache-commons-math-CombinatoricsUtils/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://commons.apache.org/proper/commons-math/javadocs/api-3.6/index.html?org/apache/commons/math3/util/CombinatoricsUtils.html"&gt;https://commons.apache.org/proper/commons-math/javadocs/api-3.6/index.html?org/apache/commons/math3/util/CombinatoricsUtils.html&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 26 Oct 2019 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-10-26:/blog/hands-on-apache-commons-math-CombinatoricsUtils/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>JVM</category><category>Java</category><category>Apache</category><category>Commons Math</category><category>statistics</category><category>CombinatoricsUtils</category><category>combinatorics</category><category>binomial coefficient</category></item><item><title>Hands on the RandomDataGenerator class in Apache Commons Math</title><link>https://misc.legendu.net/blog/hands-on-apache-commons-math-RandomDataGenerator/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://commons.apache.org/proper/commons-math/javadocs/api-3.6/org/apache/commons/math3/random/RandomDataGenerator.html"&gt;http://commons.apache.org/proper/commons-math/javadocs/api-3.6/org/apache/commons/math3/random/RandomDataGenerator.html&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 26 Oct 2019 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-10-26:/blog/hands-on-apache-commons-math-RandomDataGenerator/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>JVM</category><category>Java</category><category>Apache</category><category>Commons Math</category><category>statistics</category><category>RandomDataGenerator</category></item><item><title>Hands on scala.math</title><link>https://misc.legendu.net/blog/hands-on-scala.math/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://www.scala-lang.org/api/2.12.3/scala/math/index.html"&gt;http://www.scala-lang.org/api/2.12.3/scala/math/index.html&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="pow"&gt;pow&lt;a class="anchor-link" href="#pow"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 26 Oct 2019 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-10-26:/blog/hands-on-scala.math/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>JVM</category><category>Java</category><category>math</category><category>scala.math</category></item><item><title>Hands on the sqlite3-jdbc library in Scala</title><link>https://misc.legendu.net/blog/hands-on-sqlite3-jdbc-scala/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://github.com/xerial/sqlite-jdbc"&gt;https://github.com/xerial/sqlite-jdbc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/slick/slick"&gt;https://github.com/slick/slick&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://slick.lightbend.com/"&gt;http://slick.lightbend.com/&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 26 Oct 2019 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-10-26:/blog/hands-on-sqlite3-jdbc-scala/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>JVM</category><category>Java</category><category>sqlite3-jdbc</category></item><item><title>Hands on the Stream Object in Java 8</title><link>https://misc.legendu.net/blog/hands-on-stream-object-java8/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comemnts"&gt;Comemnts&lt;a class="anchor-link" href="#Comemnts"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Stream (introduced in Java 8) brings functional programming into Java
 so that coding in Java is easier and faster
 but at the cost of performance.
 Code written in Stream is slower than non-stream and lambda based Java code, generally speaking.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The method &lt;code&gt;Stream.map&lt;/code&gt; is not friendly on conversion to Arrays. 
 &lt;code&gt;Stream.mapToInt&lt;/code&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 26 Oct 2019 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-10-26:/blog/hands-on-stream-object-java8/</guid><category>Computer Science</category><category>programming</category><category>JVM</category><category>Java 8</category><category>Stream</category></item><item><title>Use SnakeYaml in Scala</title><link>https://misc.legendu.net/blog/use-snakeyaml-in-scala/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://bitbucket.org/asomov/snakeyaml/src/default/"&gt;SnakeYAML&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/jcazevedo/moultingyaml"&gt;moultingyaml&lt;/a&gt;: Scala wrapper for SnakeYAML&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://bitbucket.org/asomov/snakeyaml/src/default/"&gt;https://bitbucket.org/asomov/snakeyaml/src/default/&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://bitbucket.org/asomov/snakeyaml-engine/src/default/"&gt;https://bitbucket.org/asomov/snakeyaml-engine/src/default/&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://alvinalexander.com/scala/scala-yaml-parser-parsing-examples-snakeyaml-objects"&gt;https://alvinalexander.com/scala/scala-yaml-parser-parsing-examples-snakeyaml-objects&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="http://blog.baita.pro/scala/yaml/parsing/2017/02/20/yaml-parsing-with-snakeyaml-moultingyaml.html"&gt;http://blog.baita.pro/scala/yaml/parsing/2017/02/20/yaml-parsing-with-snakeyaml-moultingyaml.html&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comment"&gt;Comment&lt;a class="anchor-link" href="#Comment"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;If the input YAML doc has multiple formats, 
you can first load it as an Object 
and then use &lt;code&gt;Object.isInstanceOf&lt;/code&gt; to check its type 
and use &lt;code&gt;Object.asInstanceOf[SomeType]&lt;/code&gt; to cast it to the right type.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 26 Oct 2019 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-10-26:/blog/use-snakeyaml-in-scala/</guid><category>Computer Science</category><category>programming</category><category>Scala</category><category>JVM</category><category>Java</category><category>SnakeYAML</category><category>YAML</category></item><item><title>Make A Dot Match Newline in the re Module in Python</title><link>https://misc.legendu.net/blog/make-dot-match-newline-re-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comment"&gt;Comment&lt;a class="anchor-link" href="#Comment"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Pass &lt;code&gt;re.DOTALL&lt;/code&gt; to the option &lt;code&gt;flags&lt;/code&gt; to make a dot match newlines as well.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 23 Oct 2019 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-10-23:/blog/make-dot-match-newline-re-python/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>re</category><category>regular expression</category><category>newline</category></item><item><title>Hands on the re.match object in Python</title><link>https://misc.legendu.net/blog/re.match-in-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3/library/re.html#match-objects"&gt;https://docs.python.org/3/library/re.html#match-objects&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Wed, 23 Oct 2019 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-10-23:/blog/re.match-in-python/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>re</category><category>regular expression</category><category>re.match</category></item><item><title>Equality by Reference and Value in Python</title><link>https://misc.legendu.net/blog/equality-by-reference-and-value-in-python/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Below is a summary of equality by reference and value in different programming languages.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 22 Oct 2019 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-10-22:/blog/equality-by-reference-and-value-in-python/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>equality</category><category>equal</category><category>reference</category><category>value</category><category>immutable</category></item><item><title>Hands on Full-text Search in SQLite3</title><link>https://misc.legendu.net/blog/hands-on-full-text-search-in-sqlite3/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="FTS5-(Full-text-Search)-in-SQLite3"&gt;FTS5 (Full-text Search) in SQLite3&lt;a class="anchor-link" href="#FTS5-(Full-text-Search)-in-SQLite3"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;If tokens in the search phrase are separated by either spaces or plus signs, 
 then they are matched in order by tokens in the text.
 To match tokens orderless, 
 you can separate tokens in the search phrase with the keyword &lt;code&gt;AND&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 22 Oct 2019 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-10-22:/blog/hands-on-full-text-search-in-sqlite3/</guid><category>Computer Science</category><category>programming</category><category>SQLite3</category><category>full-text search</category><category>FTS5</category><category>SQL</category></item><item><title>Hands on the highlight command</title><link>https://misc.legendu.net/blog/hands-on-the-highlight-command/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://linux.die.net/man/1/highlight"&gt;https://linux.die.net/man/1/highlight&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;highlight -O ansi
highlight -O xterm256

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;pygmentize&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alias c='pygmentize -g'&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Mon, 21 Oct 2019 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-10-21:/blog/hands-on-the-highlight-command/</guid><category>OS</category><category>Linux</category><category>shell</category><category>command line</category><category>highlight</category></item><item><title>Popen - Advanced Usage of subprocess</title><link>https://misc.legendu.net/blog/Popen-advanced-usage-of-subprocess/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Popen---Advance-Usage-of-subprocess"&gt;Popen - Advance Usage of subprocess&lt;a class="anchor-link" href="#Popen---Advance-Usage-of-subprocess"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Capture and handle the output of a long running process.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 19 Oct 2019 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-10-19:/blog/Popen-advanced-usage-of-subprocess/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>subprocess</category><category>Popen</category><category>adavanced usage</category></item><item><title>Hands-on the ImageChops class in Pillow in Python</title><link>https://misc.legendu.net/blog/python-pillow-ImageChops/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 16 Feb 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-02-16:/blog/python-pillow-ImageChops/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>Pillow</category><category>computer vision</category><category>CV</category><category>image</category><category>PIL</category><category>ImageChops</category></item><item><title>Image Filters in Pillow</title><link>https://misc.legendu.net/blog/python-pillow-ImageFilter/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Comments"&gt;Comments&lt;a class="anchor-link" href="#Comments"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;PIL.ImageGrab works on macOS and Windows only.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can further crop a screenshot image using the method &lt;code&gt;Image.crop&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 16 Feb 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-02-16:/blog/python-pillow-ImageFilter/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>Pillow</category><category>computer vision</category><category>CV</category><category>image</category><category>filter</category><category>PIL</category></item><item><title>Calculate Statistics About an Image Using Pillow in Python</title><link>https://misc.legendu.net/blog/python-pillow-ImageStat/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 16 Feb 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-02-16:/blog/python-pillow-ImageStat/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>Pillow</category><category>computer vision</category><category>CV</category><category>image</category><category>statistics</category><category>PIL</category><category>ImageStat</category></item><item><title>Compare Images Using Python</title><link>https://misc.legendu.net/blog/python-pillow-image-compare/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 16 Feb 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-02-16:/blog/python-pillow-image-compare/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>Pillow</category><category>computer vision</category><category>CV</category><category>image</category><category>PIL</category><category>similarity</category></item><item><title>Rotate an Image Using Pillow in Python</title><link>https://misc.legendu.net/blog/python-pillow-image-rotate/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 16 Feb 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-02-16:/blog/python-pillow-image-rotate/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>Pillow</category><category>computer vision</category><category>CV</category><category>image</category><category>rotate</category><category>PIL</category></item><item><title>Shift Images Using Pillow in Python</title><link>https://misc.legendu.net/blog/python-pillow-image-shift/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 16 Feb 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-02-16:/blog/python-pillow-image-shift/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>Pillow</category><category>computer vision</category><category>CV</category><category>image</category><category>statistics</category><category>PIL</category><category>ImageStat</category></item><item><title>Convert an Image to Numpy Array in Python</title><link>https://misc.legendu.net/blog/python-pillow-numpy-array/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 16 Feb 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-02-16:/blog/python-pillow-numpy-array/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>Pillow</category><category>computer vision</category><category>CV</category><category>image</category><category>PIL</category><category>numpy</category><category>array</category></item><item><title>Convert a PNG Image to the JPG Format Using Pillow in Python</title><link>https://misc.legendu.net/blog/python-pillow-png-to-jpg/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 16 Feb 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-02-16:/blog/python-pillow-png-to-jpg/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>Pillow</category><category>computer vision</category><category>CV</category><category>image</category><category>PIL</category><category>PNG</category><category>JPG</category></item><item><title>Hands on the Python package scikit-image</title><link>https://misc.legendu.net/blog/python-scikit-image/</link><description>&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Sat, 16 Feb 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-02-16:/blog/python-scikit-image/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>Pillow</category><category>computer vision</category><category>CV</category><category>image</category><category>PIL</category><category>similarity</category></item><item><title>Get the Version of Python</title><link>https://misc.legendu.net/blog/python-version/</link><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="In-Shell"&gt;In Shell&lt;a class="anchor-link" href="#In-Shell"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ben Du</dc:creator><pubDate>Tue, 12 Feb 2019 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:misc.legendu.net,2019-02-12:/blog/python-version/</guid><category>Computer Science</category><category>programming</category><category>Python</category><category>version</category></item></channel></rss>